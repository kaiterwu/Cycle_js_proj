/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_sunmoves__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/sunmoves */ \"./src/scripts/sunmoves.js\");\n/* harmony import */ var _scripts_seasons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/seasons */ \"./src/scripts/seasons.js\");\n/* harmony import */ var _scripts_moonPhase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/moonPhase */ \"./src/scripts/moonPhase.js\");\n/* harmony import */ var _scripts_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/data */ \"./src/scripts/data.js\");\n/* harmony import */ var _scripts_timeConvert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/timeConvert */ \"./src/scripts/timeConvert.js\");\n/* harmony import */ var _scripts_intro_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scripts/intro_modal */ \"./src/scripts/intro_modal.js\");\n/* harmony import */ var _scripts_select_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scripts/select_modal */ \"./src/scripts/select_modal.js\");\n\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  (0,_scripts_intro_modal__WEBPACK_IMPORTED_MODULE_5__.openIntroModal)();\n  (0,_scripts_select_modal__WEBPACK_IMPORTED_MODULE_6__.openSelectModal)();\n  (0,_scripts_intro_modal__WEBPACK_IMPORTED_MODULE_5__.volume)();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDeUQ7QUFDUTtBQUNKO0FBQ2U7QUFDbEI7QUFDSTtBQUNMO0FBR3pEZSxRQUFRLENBQUNDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLE1BQU07RUFFaERKLG9FQUFjLEVBQUU7RUFDaEJFLHNFQUFlLEVBQUU7RUFDakJELDREQUFNLEVBQUU7QUFJWixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc19wcm9qX2N5Y2xlLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQge2RyYXdTdW4sb3BlblN1bk1vZGFsfSAgZnJvbSBcIi4vc2NyaXB0cy9zdW5tb3Zlc1wiO1xuaW1wb3J0IHsgZHJhd1NlYXNvbnMsb3BlblNlYXNvbnNNb2RhbCB9IGZyb20gXCIuL3NjcmlwdHMvc2Vhc29uc1wiO1xuaW1wb3J0IHsgZHJhd01vb24sb3Blbk1vb25Nb2RhbCB9IGZyb20gXCIuL3NjcmlwdHMvbW9vblBoYXNlXCI7XG5pbXBvcnQgeyBmZXRjaERhdGEsZ2V0RGF0YSxnZXRDbG9jaywgZ2V0Q3VycmVudERhdGEgfSBmcm9tIFwiLi9zY3JpcHRzL2RhdGFcIjtcbmltcG9ydCB7IGdldERhdGUsY2FsbGNsb2NrIH0gZnJvbSBcIi4vc2NyaXB0cy90aW1lQ29udmVydFwiO1xuaW1wb3J0IHsgb3BlbkludHJvTW9kYWwsdm9sdW1lIH0gZnJvbSBcIi4vc2NyaXB0cy9pbnRyb19tb2RhbFwiO1xuaW1wb3J0IHsgb3BlblNlbGVjdE1vZGFsIH0gZnJvbSBcIi4vc2NyaXB0cy9zZWxlY3RfbW9kYWxcIjtcblxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gICAgXG4gICAgb3BlbkludHJvTW9kYWwoKVxuICAgIG9wZW5TZWxlY3RNb2RhbCgpXG4gICAgdm9sdW1lKClcbiAgIFxuICAgICAgICBcbiAgICBcbn0pO1xuXG4iXSwibmFtZXMiOlsiZHJhd1N1biIsIm9wZW5TdW5Nb2RhbCIsImRyYXdTZWFzb25zIiwib3BlblNlYXNvbnNNb2RhbCIsImRyYXdNb29uIiwib3Blbk1vb25Nb2RhbCIsImZldGNoRGF0YSIsImdldERhdGEiLCJnZXRDbG9jayIsImdldEN1cnJlbnREYXRhIiwiZ2V0RGF0ZSIsImNhbGxjbG9jayIsIm9wZW5JbnRyb01vZGFsIiwidm9sdW1lIiwib3BlblNlbGVjdE1vZGFsIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/data.js":
/*!*****************************!*\
  !*** ./src/scripts/data.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCurrentData\": function() { return /* binding */ getCurrentData; },\n/* harmony export */   \"getPastData\": function() { return /* binding */ getPastData; }\n/* harmony export */ });\n/* harmony import */ var _timeConvert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeConvert */ \"./src/scripts/timeConvert.js\");\n/* harmony import */ var _sunmoves__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sunmoves */ \"./src/scripts/sunmoves.js\");\n/* harmony import */ var _moonPhase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./moonPhase */ \"./src/scripts/moonPhase.js\");\n/* harmony import */ var _seasons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./seasons */ \"./src/scripts/seasons.js\");\n/* harmony import */ var _temperature__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./temperature */ \"./src/scripts/temperature.js\");\n/* harmony import */ var _humidity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./humidity */ \"./src/scripts/humidity.js\");\n/* harmony import */ var _uv__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./uv */ \"./src/scripts/uv.js\");\n/* harmony import */ var _precipitation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./precipitation */ \"./src/scripts/precipitation.js\");\n// import {drawSun,openSunModal}  from \"./scripts/sunmoves\";\n\n\n\n\n\n\n\n\nconst apiKey = \"4P48W2KCWFQAQ6SJ99K5H2VBM\";\nconst now = Math.floor(Date.now() / 1000);\nfunction drawData(data) {\n  (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.getDate)(data);\n  (0,_sunmoves__WEBPACK_IMPORTED_MODULE_1__.drawSun)(data, 200, 10, \"5px\", \"black\", \"#sun-path\");\n  (0,_moonPhase__WEBPACK_IMPORTED_MODULE_2__.drawMoon)(data, 450, \"30px\", \"black\", \"#moons\");\n  (0,_seasons__WEBPACK_IMPORTED_MODULE_3__.drawSeasons)(data, 600, 40, \"20px\", \"black\", \"#seasons\");\n  (0,_sunmoves__WEBPACK_IMPORTED_MODULE_1__.openSunModal)(data);\n  (0,_moonPhase__WEBPACK_IMPORTED_MODULE_2__.openMoonModal)(data);\n  (0,_seasons__WEBPACK_IMPORTED_MODULE_3__.openSeasonsModal)(data);\n  (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.getlocation)(data);\n  (0,_temperature__WEBPACK_IMPORTED_MODULE_4__.makeTempWidget)(data);\n  (0,_humidity__WEBPACK_IMPORTED_MODULE_5__.makeHumidWidget)(data);\n  (0,_uv__WEBPACK_IMPORTED_MODULE_6__.makeUvWidget)(data);\n  (0,_precipitation__WEBPACK_IMPORTED_MODULE_7__.makePrecipWidget)(data);\n  (0,_temperature__WEBPACK_IMPORTED_MODULE_4__.openTempModal)(data);\n  (0,_humidity__WEBPACK_IMPORTED_MODULE_5__.openHumidModal)(data);\n  (0,_precipitation__WEBPACK_IMPORTED_MODULE_7__.openPrecipModal)(data);\n  (0,_uv__WEBPACK_IMPORTED_MODULE_6__.openUvModal)(data);\n}\nasync function getCurrentData(zipcode) {\n  try {\n    const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${zipcode}/${now}?key=${apiKey}`);\n    if (response.ok) {\n      const data = await response.json();\n      drawData(data);\n      (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.callclock)();\n      document.querySelector(\"#location\").append(document.createElement('br'));\n      document.querySelector(\"#location\").append(\"Current Time\");\n      // console.log(data)\n    } else {\n      throw response;\n    }\n  } catch (errorResponse) {\n    console.error(errorResponse);\n  }\n}\nasync function getPastData(zipcode, date, dayTime) {\n  try {\n    const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${zipcode}/${date}T${dayTime}?key=${apiKey}&include=current`);\n    if (response.ok) {\n      const data = await response.json();\n      drawData(data);\n      (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.getTime)(data);\n      console.log(data);\n    } else {\n      throw response;\n    }\n  } catch (errorResponse) {\n    console.error(errorResponse);\n  }\n}\n\n//DUMMY DATA ------------------------------------------------\n//day/spring\n//  const response = await fetch(`../project_docs/2023-03-12.json`);\n//  night/winter\n//  const response = await fetch(`../project_docs/night_data.json`)\n// const response = await fetch(`../project_docs/summer.json`)\n// const response = await fetch(`../project_docs/fall.json`)\n//------------------------------------------------------\n\n//DUMMY DATA----------------------------------------------------------\n//day/spring\n//  const response = await fetch(`../project_docs/2023-03-12.json`);\n//  night/winter\n//  const response = await fetch(`../project_docs/night_data.json`)\n// const response = await fetch(`../project_docs/summer.json`)\n// const response = await fetch(`../project_docs/fall.json`)\n//DUMMY DATA-----------------------------------------------------------//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFDRixDQUFDLENBQUMsT0FBT1EsYUFBYSxFQUFFO0lBQ3RCQyxPQUFPLENBQUNDLEtBQUssQ0FBQ0YsYUFBYSxDQUFDO0VBQzlCO0FBQ0Y7O0FBR0E7QUFDQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJRDtBQUNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNfcHJval9jeWNsZS8uL3NyYy9zY3JpcHRzL2RhdGEuanM/ZmJkMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge2RyYXdTdW4sb3BlblN1bk1vZGFsfSAgZnJvbSBcIi4vc2NyaXB0cy9zdW5tb3Zlc1wiO1xuaW1wb3J0IHsgZ2V0RGF0ZSxjYWxsY2xvY2ssZ2V0bG9jYXRpb24sZ2V0VGltZSB9IGZyb20gXCIuL3RpbWVDb252ZXJ0XCI7XG5pbXBvcnQgeyBkcmF3U3VuLG9wZW5TdW5Nb2RhbH0gZnJvbSBcIi4vc3VubW92ZXNcIjtcbmltcG9ydCB7IGRyYXdNb29uLG9wZW5Nb29uTW9kYWwgfSBmcm9tIFwiLi9tb29uUGhhc2VcIjtcbmltcG9ydCB7IGRyYXdTZWFzb25zLG9wZW5TZWFzb25zTW9kYWwgfSBmcm9tIFwiLi9zZWFzb25zXCI7XG5pbXBvcnQgeyBtYWtlVGVtcFdpZGdldCxvcGVuVGVtcE1vZGFsIH0gZnJvbSBcIi4vdGVtcGVyYXR1cmVcIjtcbmltcG9ydCB7IG1ha2VIdW1pZFdpZGdldCxvcGVuSHVtaWRNb2RhbCB9IGZyb20gXCIuL2h1bWlkaXR5XCI7XG5pbXBvcnQgeyBtYWtlVXZXaWRnZXQsb3BlblV2TW9kYWwgfSBmcm9tIFwiLi91dlwiO1xuaW1wb3J0IHsgbWFrZVByZWNpcFdpZGdldCwgb3BlblByZWNpcE1vZGFsIH0gZnJvbSBcIi4vcHJlY2lwaXRhdGlvblwiO1xuXG5cblxuXG5cbmNvbnN0IGFwaUtleSA9IFwiNFA0OFcyS0NXRlFBUTZTSjk5SzVIMlZCTVwiXG5jb25zdCBub3cgPSBNYXRoLmZsb29yKERhdGUubm93KCkvMTAwMClcblxuZnVuY3Rpb24gZHJhd0RhdGEoZGF0YSl7XG4gIGdldERhdGUoZGF0YSlcbiAgZHJhd1N1bihkYXRhLDIwMCwxMCxcIjVweFwiLFwiYmxhY2tcIixcIiNzdW4tcGF0aFwiKTtcbiAgZHJhd01vb24oZGF0YSw0NTAsXCIzMHB4XCIsXCJibGFja1wiLFwiI21vb25zXCIpO1xuICBkcmF3U2Vhc29ucyhkYXRhLDYwMCw0MCxcIjIwcHhcIixcImJsYWNrXCIsXCIjc2Vhc29uc1wiKTtcbiAgb3BlblN1bk1vZGFsKGRhdGEpO1xuICBvcGVuTW9vbk1vZGFsKGRhdGEpO1xuICBvcGVuU2Vhc29uc01vZGFsKGRhdGEpO1xuICBnZXRsb2NhdGlvbihkYXRhKTtcbiAgbWFrZVRlbXBXaWRnZXQoZGF0YSk7XG4gIG1ha2VIdW1pZFdpZGdldChkYXRhKTtcbiAgbWFrZVV2V2lkZ2V0KGRhdGEpO1xuICBtYWtlUHJlY2lwV2lkZ2V0KGRhdGEpO1xuICBvcGVuVGVtcE1vZGFsKGRhdGEpO1xuICBvcGVuSHVtaWRNb2RhbChkYXRhKTtcbiAgb3BlblByZWNpcE1vZGFsKGRhdGEpO1xuICBvcGVuVXZNb2RhbChkYXRhKTtcblxufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEN1cnJlbnREYXRhKHppcGNvZGUpIHtcbiAgICBcbiAgICB0cnkge1xuICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vd2VhdGhlci52aXN1YWxjcm9zc2luZy5jb20vVmlzdWFsQ3Jvc3NpbmdXZWJTZXJ2aWNlcy9yZXN0L3NlcnZpY2VzL3RpbWVsaW5lLyR7emlwY29kZX0vJHtub3d9P2tleT0ke2FwaUtleX1gKTtcbiAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgICBkcmF3RGF0YShkYXRhKVxuICAgICAgICAgY2FsbGNsb2NrKClcbiAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbG9jYXRpb25cIikuYXBwZW5kKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2JyJykpXG4gICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2xvY2F0aW9uXCIpLmFwcGVuZChcIkN1cnJlbnQgVGltZVwiKVxuICAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyByZXNwb25zZTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyb3JSZXNwb25zZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yUmVzcG9uc2UpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UGFzdERhdGEoemlwY29kZSxkYXRlLGRheVRpbWUpIHtcbiAgICAgIFxuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly93ZWF0aGVyLnZpc3VhbGNyb3NzaW5nLmNvbS9WaXN1YWxDcm9zc2luZ1dlYlNlcnZpY2VzL3Jlc3Qvc2VydmljZXMvdGltZWxpbmUvJHt6aXBjb2RlfS8ke2RhdGV9VCR7ZGF5VGltZX0/a2V5PSR7YXBpS2V5fSZpbmNsdWRlPWN1cnJlbnRgKTtcbiAgICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICBkcmF3RGF0YShkYXRhKVxuICAgICAgICAgIGdldFRpbWUoZGF0YSlcbiAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IHJlc3BvbnNlO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvclJlc3BvbnNlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3JSZXNwb25zZSk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIFxuICAgIC8vRFVNTVkgREFUQSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgLy9kYXkvc3ByaW5nXG4gICAgIC8vICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAuLi9wcm9qZWN0X2RvY3MvMjAyMy0wMy0xMi5qc29uYCk7XG4gICAgIC8vICBuaWdodC93aW50ZXJcbiAgICAgLy8gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC4uL3Byb2plY3RfZG9jcy9uaWdodF9kYXRhLmpzb25gKVxuICAgICAvLyBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAuLi9wcm9qZWN0X2RvY3Mvc3VtbWVyLmpzb25gKVxuICAgICAvLyBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAuLi9wcm9qZWN0X2RvY3MvZmFsbC5qc29uYClcbiAgICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBcbiAgICBcbiAgICBcbiAgICAvL0RVTU1ZIERBVEEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICAvL2RheS9zcHJpbmdcbiAgICAgIC8vICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAuLi9wcm9qZWN0X2RvY3MvMjAyMy0wMy0xMi5qc29uYCk7XG4gICAgICAvLyAgbmlnaHQvd2ludGVyXG4gICAgICAvLyAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgLi4vcHJvamVjdF9kb2NzL25pZ2h0X2RhdGEuanNvbmApXG4gICAgICAvLyBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAuLi9wcm9qZWN0X2RvY3Mvc3VtbWVyLmpzb25gKVxuICAgICAgLy8gY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgLi4vcHJvamVjdF9kb2NzL2ZhbGwuanNvbmApXG4gICAgLy9EVU1NWSBEQVRBLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAiXSwibmFtZXMiOlsiZ2V0RGF0ZSIsImNhbGxjbG9jayIsImdldGxvY2F0aW9uIiwiZ2V0VGltZSIsImRyYXdTdW4iLCJvcGVuU3VuTW9kYWwiLCJkcmF3TW9vbiIsIm9wZW5Nb29uTW9kYWwiLCJkcmF3U2Vhc29ucyIsIm9wZW5TZWFzb25zTW9kYWwiLCJtYWtlVGVtcFdpZGdldCIsIm9wZW5UZW1wTW9kYWwiLCJtYWtlSHVtaWRXaWRnZXQiLCJvcGVuSHVtaWRNb2RhbCIsIm1ha2VVdldpZGdldCIsIm9wZW5Vdk1vZGFsIiwibWFrZVByZWNpcFdpZGdldCIsIm9wZW5QcmVjaXBNb2RhbCIsImFwaUtleSIsIm5vdyIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJkcmF3RGF0YSIsImRhdGEiLCJnZXRDdXJyZW50RGF0YSIsInppcGNvZGUiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJqc29uIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYXBwZW5kIiwiY3JlYXRlRWxlbWVudCIsImVycm9yUmVzcG9uc2UiLCJjb25zb2xlIiwiZXJyb3IiLCJnZXRQYXN0RGF0YSIsImRhdGUiLCJkYXlUaW1lIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/data.js\n");

/***/ }),

/***/ "./src/scripts/humidity.js":
/*!*********************************!*\
  !*** ./src/scripts/humidity.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeHumidWidget\": function() { return /* binding */ makeHumidWidget; },\n/* harmony export */   \"openHumidModal\": function() { return /* binding */ openHumidModal; }\n/* harmony export */ });\nfunction drawHumid(queryData, diameter, inner, stroke, strokeColor) {\n  let delay = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let id = arguments.length > 6 ? arguments[6] : undefined;\n  //set the dimensions and margins of the graph\n\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n\n  // The radius of the pieplot is half the width or half the height (smallest one). Margin slightly subtracted \n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'sun-path'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n  const currentHumid = queryData.currentConditions.humidity;\n  let left = currentHumid;\n  let right = 100 - currentHumid;\n  const data = {\n    \"💧\": left,\n    \"\": right\n  };\n  // const data = {\"💧\":1,\"\":2}\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#9fc5e8\", \"#3a3a3a\"]);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null).startAngle(-5 * Math.PI / 6).endAngle(5 * Math.PI / 6);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('slice').data(data_ready).join('path').transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).delay(delay).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //5px\n  .style(\"opacity\", 1);\n  svg.selectAll('slices').data(data_ready).join('text').text(function (d) {\n    return d.data[0];\n  }).transition().duration(2000).delay(delay).attr(\"transform\", function (d) {\n    return `translate(${arc.centroid(d)})`;\n  }).style(\"text-anchor\", \"middle\");\n}\nfunction makeHumidWidget(data) {\n  drawHumid(data, 150, 30, \"5px\", \"black\", 500, \"#humid-widget\");\n  const currentHumid = data.currentConditions.humidity;\n  const humidContainer = document.querySelector(\"#humid-widget\");\n  const humidDiv = document.createElement(\"div\");\n  humidDiv.innerText = `${Math.round(currentHumid)}` + '%';\n  humidContainer.append(humidDiv);\n}\nfunction openHumidModal(data) {\n  const currentHumid = data.currentConditions.humidity;\n  const currentDew = data.currentConditions.dew;\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openHumid = document.querySelector(\"#humid-widget>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n    upper.innerHTML = \"\";\n    lower.innerHTML = \"\";\n  };\n  function createText(data) {\n    const upperHead = document.createElement(\"p\");\n    const upperHumid = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerDew = document.createElement(\"h1\");\n    const humidImg = document.createElement(\"img\");\n    upperHead.innerText = \"Current Humidity\";\n    upperHumid.innerText = `${Math.round(currentHumid)}` + `%`;\n    upperHumid.style.color = \"#000000\";\n    upperHumid.style.border = \"5px solid #9fc5e8\";\n    upperHumid.style.borderRadius = \"20px\";\n    upperHumid.style.background = \"#9fc5e8\";\n    upperHumid.style.boxShadow = \"0px 0px 20px 20px #9fc5e8\";\n    upperHumid.style.textShadow = \"1px 1px 5px black\";\n    lowerHead.innerText = \"Current Dew Point\";\n    lowerDew.innerText = `${Math.round(currentDew)}` + '°F';\n    lowerDew.style.color = \"#9fc5e8\";\n    lowerDew.style.border = \"5px solid #9fc5e8\";\n    lowerDew.style.borderRadius = \"20px\";\n    lowerDew.style.background = \"#9fc5e8\";\n    lowerDew.style.boxShadow = \"0px 0px 20px 20px #9fc5e8\";\n    lowerDew.style.textShadow = \"1px 1px 5px black\";\n    humidImg.src = 'images/weather/humidity.png';\n    svg.append(humidImg);\n    upper.append(upperHead);\n    upper.append(upperHumid);\n    lower.append(lowerHead);\n    lower.append(lowerDew);\n  }\n  function onOpen() {\n    drawHumid(data, 600, 60, \"5px\", \"white\", 0, \"#svg-container\");\n    createText(data);\n  }\n  openHumid.addEventListener(\"click\", openModal);\n  openHumid.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/humidity.js\n");

/***/ }),

/***/ "./src/scripts/intro_modal.js":
/*!************************************!*\
  !*** ./src/scripts/intro_modal.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"openIntroModal\": function() { return /* binding */ openIntroModal; },\n/* harmony export */   \"volume\": function() { return /* binding */ volume; }\n/* harmony export */ });\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ \"./src/scripts/data.js\");\n\nfunction openIntroModal() {\n  const modal = document.querySelector('.intro-modal');\n  const submit = document.querySelector('#start');\n  const overlay = document.querySelector(\".overlay\");\n  function closeModal() {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    playSong();\n  }\n  function getZip() {\n    let myZipcode = document.querySelector('#zipcode').value;\n    (0,_data__WEBPACK_IMPORTED_MODULE_0__.getCurrentData)(myZipcode);\n  }\n  function playSong() {\n    let song = document.querySelector('#startSong');\n    song.play();\n  }\n  submit.addEventListener(\"click\", closeModal);\n  submit.addEventListener(\"click\", getZip);\n}\nfunction volume() {\n  const songButton = document.querySelector('#songplay');\n  const song = document.querySelector('#startSong');\n  function mute() {\n    if (song.muted) {\n      song.muted = false;\n      songButton.innerText = '♫';\n    } else {\n      song.muted = true;\n      songButton.innerText = \"⏸\";\n    }\n  }\n  songButton.addEventListener(\"click\", mute);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9pbnRyb19tb2RhbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0M7QUFFakMsU0FBU0MsY0FBY0EsQ0FBQSxFQUFFO0VBQzVCLE1BQU1DLEtBQUssR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsY0FBYyxDQUFDO0VBQ3BELE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDQyxhQUFhLENBQUMsUUFBUSxDQUFDO0VBQy9DLE1BQU1FLE9BQU8sR0FBR0gsUUFBUSxDQUFDQyxhQUFhLENBQUMsVUFBVSxDQUFDO0VBRWxELFNBQVNHLFVBQVVBLENBQUEsRUFBRTtJQUNqQkwsS0FBSyxDQUFDTSxTQUFTLENBQUNDLEdBQUcsQ0FBQyxRQUFRLENBQUM7SUFDN0JILE9BQU8sQ0FBQ0UsU0FBUyxDQUFDQyxHQUFHLENBQUMsUUFBUSxDQUFDO0lBQy9CQyxRQUFRLEVBQUU7RUFDZDtFQUVBLFNBQVNDLE1BQU1BLENBQUEsRUFBRTtJQUNiLElBQUlDLFNBQVMsR0FBR1QsUUFBUSxDQUFDQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUNTLEtBQUs7SUFDeERiLHFEQUFjLENBQUNZLFNBQVMsQ0FBQztFQUU3QjtFQUVBLFNBQVNGLFFBQVFBLENBQUEsRUFBRTtJQUNmLElBQUlJLElBQUksR0FBR1gsUUFBUSxDQUFDQyxhQUFhLENBQUMsWUFBWSxDQUFDO0lBQy9DVSxJQUFJLENBQUNDLElBQUksRUFBRTtFQUNmO0VBR0FWLE1BQU0sQ0FBQ1csZ0JBQWdCLENBQUMsT0FBTyxFQUFDVCxVQUFVLENBQUM7RUFDM0NGLE1BQU0sQ0FBQ1csZ0JBQWdCLENBQUMsT0FBTyxFQUFDTCxNQUFNLENBQUM7QUFFM0M7QUFFTyxTQUFTTSxNQUFNQSxDQUFBLEVBQUU7RUFDcEIsTUFBTUMsVUFBVSxHQUFHZixRQUFRLENBQUNDLGFBQWEsQ0FBQyxXQUFXLENBQUM7RUFFdEQsTUFBTVUsSUFBSSxHQUFHWCxRQUFRLENBQUNDLGFBQWEsQ0FBQyxZQUFZLENBQUM7RUFFakQsU0FBU2UsSUFBSUEsQ0FBQSxFQUFFO0lBQ1gsSUFBSUwsSUFBSSxDQUFDTSxLQUFLLEVBQUM7TUFDWE4sSUFBSSxDQUFDTSxLQUFLLEdBQUcsS0FBSztNQUNsQkYsVUFBVSxDQUFDRyxTQUFTLEdBQUcsR0FBRztJQUM5QixDQUFDLE1BQUk7TUFDRFAsSUFBSSxDQUFDTSxLQUFLLEdBQUcsSUFBSTtNQUNqQkYsVUFBVSxDQUFDRyxTQUFTLEdBQUcsR0FBRztJQUM5QjtFQUNKO0VBQ0FILFVBQVUsQ0FBQ0YsZ0JBQWdCLENBQUMsT0FBTyxFQUFDRyxJQUFJLENBQUM7QUFFN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc19wcm9qX2N5Y2xlLy4vc3JjL3NjcmlwdHMvaW50cm9fbW9kYWwuanM/NGNjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDdXJyZW50RGF0YSB9IGZyb20gXCIuL2RhdGFcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5JbnRyb01vZGFsKCl7XG4gICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW50cm8tbW9kYWwnKTtcbiAgICBjb25zdCBzdWJtaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3RhcnQnKTtcbiAgICBjb25zdCBvdmVybGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5vdmVybGF5XCIpO1xuXG4gICAgZnVuY3Rpb24gY2xvc2VNb2RhbCgpe1xuICAgICAgICBtb2RhbC5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpXG4gICAgICAgIG92ZXJsYXkuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKVxuICAgICAgICBwbGF5U29uZygpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0WmlwKCl7XG4gICAgICAgIGxldCBteVppcGNvZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjemlwY29kZScpLnZhbHVlXG4gICAgICAgIGdldEN1cnJlbnREYXRhKG15WmlwY29kZSlcblxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHBsYXlTb25nKCl7XG4gICAgICAgIGxldCBzb25nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3N0YXJ0U29uZycpXG4gICAgICAgIHNvbmcucGxheSgpXG4gICAgfVxuXG5cbiAgICBzdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsY2xvc2VNb2RhbClcbiAgICBzdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZ2V0WmlwKVxuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB2b2x1bWUoKXtcbiAgICBjb25zdCBzb25nQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NvbmdwbGF5JylcblxuICAgIGNvbnN0IHNvbmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3RhcnRTb25nJylcblxuICAgIGZ1bmN0aW9uIG11dGUoKXsgICAgXG4gICAgICAgIGlmIChzb25nLm11dGVkKXtcbiAgICAgICAgICAgIHNvbmcubXV0ZWQgPSBmYWxzZVxuICAgICAgICAgICAgc29uZ0J1dHRvbi5pbm5lclRleHQgPSAn4pmrJ1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIHNvbmcubXV0ZWQgPSB0cnVlIFxuICAgICAgICAgICAgc29uZ0J1dHRvbi5pbm5lclRleHQgPSBcIuKPuFwiXG4gICAgICAgIH1cbiAgICB9ICBcbiAgICBzb25nQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLG11dGUpXG5cbn1cblxuXG5cbiJdLCJuYW1lcyI6WyJnZXRDdXJyZW50RGF0YSIsIm9wZW5JbnRyb01vZGFsIiwibW9kYWwiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzdWJtaXQiLCJvdmVybGF5IiwiY2xvc2VNb2RhbCIsImNsYXNzTGlzdCIsImFkZCIsInBsYXlTb25nIiwiZ2V0WmlwIiwibXlaaXBjb2RlIiwidmFsdWUiLCJzb25nIiwicGxheSIsImFkZEV2ZW50TGlzdGVuZXIiLCJ2b2x1bWUiLCJzb25nQnV0dG9uIiwibXV0ZSIsIm11dGVkIiwiaW5uZXJUZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/intro_modal.js\n");

/***/ }),

/***/ "./src/scripts/moonPhase.js":
/*!**********************************!*\
  !*** ./src/scripts/moonPhase.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"drawMoon\": function() { return /* binding */ drawMoon; },\n/* harmony export */   \"openMoonModal\": function() { return /* binding */ openMoonModal; }\n/* harmony export */ });\n/* harmony import */ var _timeConvert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeConvert */ \"./src/scripts/timeConvert.js\");\n\n\nfunction drawMoon(queryData, diameter, stroke, strokeColor, id) {\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n  const radius = Math.min(width, height) / 2 - margin;\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n  // data object\n  const data = {\n    \"🌑\": 8,\n    \"🌒\": 8,\n    \"🌓\": 8,\n    \"🌔\": 8,\n    \"🌕\": 8,\n    \"🌖\": 8,\n    \"🌗\": 8,\n    \"🌘\": 8\n  };\n\n  // set color\n  const color = d3.scaleOrdinal()\n  // .range([\"#ffffff\",\"#000000\",\"#ffffff\",\"#ffffff\",\"#ffffff\",\"#ffffff\",\"#ffffff\",\"#ffffff\"])\n  //dynamic color\n  .range((0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.moonPhases)(queryData));\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null);\n  const arc = d3.arc().innerRadius(radius - 80).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('slice').data(data_ready).join('path').attr('d', arc).transition().delay(function (d, i) {\n    return i / 8 * 1000;\n  }).duration(1000).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //\"30px\"\n  .style(\"opacity\", 1);\n\n  //logic for annotating moons\n\n  svg.selectAll('slices').data(data_ready).join('text').text(function (d) {\n    return d.data[0];\n  }).transition().duration(2000).attr(\"transform\", function (d) {\n    return `translate(${arc.centroid(d)})`;\n  }).style(\"text-anchor\", \"middle\");\n  //   .style(\"font-size\", 20)\n}\n\nfunction openMoonModal(queryData) {\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openMoon = document.querySelector(\"#moons>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const background = document.querySelector(\".moon_background\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n    background.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    background.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n  };\n  function createText(queryData) {\n    const upperHead = document.createElement(\"p\");\n    const upperPhase = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerPhase = document.createElement(\"h1\");\n    const moonImg = document.createElement(\"img\");\n    const phases = [\"New\", \"Waxing Crescent\", \"First Quarter\", \"Waxing Gibbous\", \"Full\", \"Waning Gibbous\", \"Last Quarter\", \"Waning Crescent\"];\n    const currentPhase = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.moonPhaseName)(queryData);\n    upperHead.innerText = \"Current Phase\";\n    upperPhase.innerText = currentPhase;\n    lowerHead.innerText = \"Next Phase\";\n    const currentIndex = phases.indexOf(currentPhase);\n    if (currentIndex !== 7) {\n      lowerPhase.innerText = phases[currentIndex + 1];\n    } else {\n      lowerPhase.innerText = phases[0];\n    }\n    switch (currentPhase) {\n      case \"New\":\n        moonImg.src = 'images/moons/new_moon.png';\n        break;\n      case \"Waxing Crescent\":\n        moonImg.src = 'images/moons/waxing_crescent.png';\n        break;\n      case \"First Quarter\":\n        moonImg.src = 'images/moons/first_quarter.png';\n        break;\n      case \"Waxing Gibbous\":\n        moonImg.src = 'images/moons/waxing_gibbous.png';\n        break;\n      case \"Full\":\n        moonImg.src = 'images/moons/Full_moon.png';\n        break;\n      case \"Waning Gibbous\":\n        moonImg.src = 'images/moons/waning_gibbous.png';\n        break;\n      case \"Last Quarter\":\n        moonImg.src = 'images/moons/last_quarter.png';\n        break;\n      case \"Waning Crescent\":\n        moonImg.src = 'images/moons/waxing_crescent.png';\n        break;\n    }\n    upperPhase.style.fontSize = \"60px\";\n    lowerPhase.style.fontSize = \"60px\";\n    upperPhase.style.fontStyle = \"italic\";\n    upperPhase.style.border = \"5px solid black\";\n    upperPhase.style.borderRadius = \"20px\";\n    upperPhase.style.background = \"black\";\n    upperPhase.style.color = \"white\";\n    upperPhase.style.boxShadow = \"0px 0px 60px 20px rgba(255, 255, 255, 0.4) \";\n    upperPhase.style.textShadow = \"1px 1px 10px white \";\n    lowerPhase.style.fontStyle = \"italic\";\n    lowerPhase.style.border = \"10px solid white\";\n    lowerPhase.style.borderRadius = \"20px\";\n    lowerPhase.style.background = \"white\";\n    lowerPhase.style.color = \"black\";\n    lowerPhase.style.boxShadow = \"0px 0px 60px 20px rgba(255, 255, 255, 0.4) \";\n    lowerPhase.style.textShadow = \"1px 1px 5px black \";\n    lowerPhase.style.width = '80%';\n    moonImg.style.width = \"350\";\n    moonImg.style.height = \"350\";\n    moonImg.style.zIndex = \"10\";\n    upper.append(upperHead);\n    upper.append(upperPhase);\n    lower.append(lowerHead);\n    lower.append(lowerPhase);\n    svg.append(moonImg);\n  }\n  function onOpen() {\n    drawMoon(queryData, 600, \"30px\", \"black\", \"#svg-container\");\n    createText(queryData);\n  }\n  openMoon.addEventListener(\"click\", openModal);\n  openMoon.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUd2QjtFQUVBLFNBQVNjLE1BQU1BLENBQUEsRUFBRTtJQUNiNUUsUUFBUSxDQUFDQyxTQUFTLEVBQUMsR0FBRyxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUMsZ0JBQWdCLENBQUM7SUFDdkR1RCxVQUFVLENBQUN2RCxTQUFTLENBQUM7RUFDekI7RUFHQTRDLFFBQVEsQ0FBQ2dDLGdCQUFnQixDQUFDLE9BQU8sRUFBQzNCLFNBQVMsQ0FBQztFQUM1Q0wsUUFBUSxDQUFDZ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFDRCxNQUFNLENBQUM7RUFDekM5QixhQUFhLENBQUMrQixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUN4QixVQUFVLENBQUM7QUFJdEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc19wcm9qX2N5Y2xlLy4vc3JjL3NjcmlwdHMvbW9vblBoYXNlLmpzPzcwYTEiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBtb29uUGhhc2VzIH0gZnJvbSBcIi4vdGltZUNvbnZlcnRcIjtcbmltcG9ydCB7IG1vb25QaGFzZU5hbWUgfSBmcm9tIFwiLi90aW1lQ29udmVydFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gZHJhd01vb24ocXVlcnlEYXRhLGRpYW1ldGVyLHN0cm9rZSxzdHJva2VDb2xvcixpZCl7XG5cbiAgICBjb25zdCB3aWR0aCA9IGRpYW1ldGVyLFxuICAgICAgICBoZWlnaHQgPSBkaWFtZXRlcixcbiAgICAgICAgbWFyZ2luID0gMjA7XG5cblxuICAgIGNvbnN0IHJhZGl1cyA9IE1hdGgubWluKHdpZHRoLCBoZWlnaHQpIC8gMiAtIG1hcmdpblxuXG5cbiAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3QoaWQpXG4gICAgLmFwcGVuZChcInN2Z1wiKVxuICAgICAgICAuYXR0cihcIndpZHRoXCIsIHdpZHRoKVxuICAgICAgICAuYXR0cihcImhlaWdodFwiLCBoZWlnaHQpXG4gICAgLmFwcGVuZChcImdcIilcbiAgICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgYHRyYW5zbGF0ZSgke3dpZHRoIC8gMn0sJHtoZWlnaHQgLyAyfSlgKTtcbiAgICBcbiAgICBcblxuICAgIC8vIGRhdGEgb2JqZWN0XG4gICAgY29uc3QgZGF0YSA9IHtcIvCfjJFcIjo4LFwi8J+MklwiOjgsXCLwn4yTXCI6OCxcIvCfjJRcIjo4LFwi8J+MlVwiOjgsXCLwn4yWXCI6OCxcIvCfjJdcIjo4LFwi8J+MmFwiOjh9XG4gICAgXG5cbiAgICAvLyBzZXQgY29sb3JcbiAgICBjb25zdCBjb2xvciA9IGQzLnNjYWxlT3JkaW5hbCgpXG4gICAgLy8gLnJhbmdlKFtcIiNmZmZmZmZcIixcIiMwMDAwMDBcIixcIiNmZmZmZmZcIixcIiNmZmZmZmZcIixcIiNmZmZmZmZcIixcIiNmZmZmZmZcIixcIiNmZmZmZmZcIixcIiNmZmZmZmZcIl0pXG4gICAgLy9keW5hbWljIGNvbG9yXG4gICAgLnJhbmdlKG1vb25QaGFzZXMocXVlcnlEYXRhKSlcbiAgICBcblxuICAgIC8vIENvbXB1dGUgdGhlIHBvc2l0aW9uIG9mIGVhY2ggZ3JvdXAgb24gdGhlIHBpZTpcbiAgICBjb25zdCBwaWUgPSBkMy5waWUoKVxuICAgIC52YWx1ZShkPT5kWzFdKVxuICAgIC5zb3J0KG51bGwpXG5cbiAgICBjb25zdCBhcmMgPSAgZDMuYXJjKClcbiAgICAuaW5uZXJSYWRpdXMocmFkaXVzLTgwKVxuICAgIC5vdXRlclJhZGl1cyhyYWRpdXMpXG4gICBcbiAgICAgICAgXG5cblxuICAgIGNvbnN0IGRhdGFfcmVhZHkgPSBwaWUoT2JqZWN0LmVudHJpZXMoZGF0YSkpXG5cbiAgICAvLyBjb21wb3NlIGNoYXJ0LCBlYWNoIHBhcnQgb2YgdGhlIHBpZSBpcyBhIHBhdGggdGhhdCB3ZSBidWlsZCB1c2luZyBhcmMgZnVuY3Rpb24uXG4gICAgc3ZnXG4gICAgLnNlbGVjdEFsbCgnc2xpY2UnKVxuICAgIC5kYXRhKGRhdGFfcmVhZHkpXG4gICAgLmpvaW4oJ3BhdGgnKVxuICAgIC5hdHRyKCdkJywgYXJjKVxuICAgICAgICAudHJhbnNpdGlvbigpLmRlbGF5KGZ1bmN0aW9uKGQsIGkpIHsgcmV0dXJuIGkvOCAqIDEwMDA7IH0pXG4gICAgICAgIC5kdXJhdGlvbigxMDAwKVxuICAgIC5zdHlsZSgnZmlsbCcsIGQgPT4gY29sb3IoZC5kYXRhWzBdKSlcbiAgICAuYXR0cihcInN0cm9rZVwiLCBzdHJva2VDb2xvcikgICAgICAgIC8vXCJibGFja1wiXG4gICAgLnN0eWxlKFwic3Ryb2tlLXdpZHRoXCIsc3Ryb2tlICkgICAgLy9cIjMwcHhcIlxuICAgIC5zdHlsZShcIm9wYWNpdHlcIiwgMSlcblxuXG4gICAgLy9sb2dpYyBmb3IgYW5ub3RhdGluZyBtb29uc1xuXG4gICAgc3ZnXG4gIC5zZWxlY3RBbGwoJ3NsaWNlcycpXG4gIC5kYXRhKGRhdGFfcmVhZHkpXG4gIC5qb2luKCd0ZXh0JylcbiAgLnRleHQoZnVuY3Rpb24oZCl7cmV0dXJuIGQuZGF0YVswXX0pXG4gIC50cmFuc2l0aW9uKClcbiAgLmR1cmF0aW9uKDIwMDApXG4gIC5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGB0cmFuc2xhdGUoJHthcmMuY2VudHJvaWQoZCl9KWB9KVxuICBcbiAgLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgXCJtaWRkbGVcIilcbi8vICAgLnN0eWxlKFwiZm9udC1zaXplXCIsIDIwKVxuICBcblxuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvcGVuTW9vbk1vZGFsKHF1ZXJ5RGF0YSl7XG4gICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFzdHJvLW1vZGFsXCIpO1xuICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm92ZXJsYXlcIik7XG4gICAgY29uc3Qgb3Blbk1vb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vb25zPnN2Z1wiKVxuICAgIGNvbnN0IGNsb3NlTW9kYWxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNsb3NlLWJ0blwiKVxuICAgIGNvbnN0IHN2ZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc3ZnLWNvbnRhaW5lclwiKVxuICAgIGNvbnN0IHVwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN1cHBlci10ZXh0XCIpXG4gICAgY29uc3QgbG93ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2xvd2VyLXRleHRcIilcbiAgICBjb25zdCBiYWNrZ3JvdW5kID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb29uX2JhY2tncm91bmRcIilcblxuICAgIGNvbnN0IG9wZW5Nb2RhbD1mdW5jdGlvbigpe1xuICAgICAgICBtb2RhbC5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpXG4gICAgICAgIG92ZXJsYXkuY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKVxuICAgICAgICBiYWNrZ3JvdW5kLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIilcbiAgICB9O1xuXG4gICAgY29uc3QgY2xvc2VNb2RhbCA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIG1vZGFsLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIilcbiAgICAgICAgb3ZlcmxheS5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpXG4gICAgICAgIGJhY2tncm91bmQuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKVxuICAgICAgICBzdmcuaW5uZXJIVE1MID0gXCJcIlxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZVRleHQocXVlcnlEYXRhKXtcbiAgICAgICAgY29uc3QgdXBwZXJIZWFkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIilcbiAgICAgICAgY29uc3QgdXBwZXJQaGFzZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKVxuICAgICAgICBjb25zdCBsb3dlckhlYWQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKVxuICAgICAgICBjb25zdCBsb3dlclBoYXNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgxXCIpXG4gICAgICAgIGNvbnN0IG1vb25JbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpXG4gICAgICAgIGNvbnN0IHBoYXNlcyA9IFtcIk5ld1wiLFwiV2F4aW5nIENyZXNjZW50XCIsXCJGaXJzdCBRdWFydGVyXCIsXCJXYXhpbmcgR2liYm91c1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJGdWxsXCIsXCJXYW5pbmcgR2liYm91c1wiLFwiTGFzdCBRdWFydGVyXCIsXCJXYW5pbmcgQ3Jlc2NlbnRcIl1cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGN1cnJlbnRQaGFzZSA9IG1vb25QaGFzZU5hbWUocXVlcnlEYXRhKVxuXG4gICAgICAgIHVwcGVySGVhZC5pbm5lclRleHQgPSBcIkN1cnJlbnQgUGhhc2VcIlxuICAgICAgICB1cHBlclBoYXNlLmlubmVyVGV4dCA9IGN1cnJlbnRQaGFzZVxuXG4gICAgICAgIGxvd2VySGVhZC5pbm5lclRleHQgPSBcIk5leHQgUGhhc2VcIlxuICAgICAgICBcbiAgICAgICAgY29uc3QgY3VycmVudEluZGV4ID0gcGhhc2VzLmluZGV4T2YoY3VycmVudFBoYXNlKVxuICAgICAgICBpZihjdXJyZW50SW5kZXggIT09IDcpe1xuICAgICAgICAgICAgbG93ZXJQaGFzZS5pbm5lclRleHQgPSBwaGFzZXNbY3VycmVudEluZGV4KzFdXG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgbG93ZXJQaGFzZS5pbm5lclRleHQgPSBwaGFzZXNbMF1cbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXRjaChjdXJyZW50UGhhc2Upe1xuICAgICAgICAgICAgY2FzZSBcIk5ld1wiOlxuICAgICAgICAgICAgICAgIG1vb25JbWcuc3JjID0gJ2ltYWdlcy9tb29ucy9uZXdfbW9vbi5wbmcnXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiV2F4aW5nIENyZXNjZW50XCI6XG4gICAgICAgICAgICAgICAgbW9vbkltZy5zcmMgPSAnaW1hZ2VzL21vb25zL3dheGluZ19jcmVzY2VudC5wbmcnXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiRmlyc3QgUXVhcnRlclwiOlxuICAgICAgICAgICAgICAgIG1vb25JbWcuc3JjID0gJ2ltYWdlcy9tb29ucy9maXJzdF9xdWFydGVyLnBuZydcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJXYXhpbmcgR2liYm91c1wiOlxuICAgICAgICAgICAgICAgIG1vb25JbWcuc3JjID0gJ2ltYWdlcy9tb29ucy93YXhpbmdfZ2liYm91cy5wbmcnXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiRnVsbFwiOlxuICAgICAgICAgICAgICAgIG1vb25JbWcuc3JjID0gJ2ltYWdlcy9tb29ucy9GdWxsX21vb24ucG5nJ1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIldhbmluZyBHaWJib3VzXCI6XG4gICAgICAgICAgICAgICAgbW9vbkltZy5zcmMgPSAnaW1hZ2VzL21vb25zL3dhbmluZ19naWJib3VzLnBuZydcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJMYXN0IFF1YXJ0ZXJcIjpcbiAgICAgICAgICAgICAgICBtb29uSW1nLnNyYyA9ICdpbWFnZXMvbW9vbnMvbGFzdF9xdWFydGVyLnBuZydcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJXYW5pbmcgQ3Jlc2NlbnRcIjpcbiAgICAgICAgICAgICAgICBtb29uSW1nLnNyYyA9ICdpbWFnZXMvbW9vbnMvd2F4aW5nX2NyZXNjZW50LnBuZydcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIHVwcGVyUGhhc2Uuc3R5bGUuZm9udFNpemUgPSBcIjYwcHhcIlxuICAgICAgICBsb3dlclBoYXNlLnN0eWxlLmZvbnRTaXplID0gXCI2MHB4XCJcblxuICAgICAgICB1cHBlclBoYXNlLnN0eWxlLmZvbnRTdHlsZSA9IFwiaXRhbGljXCJcbiAgICAgICAgdXBwZXJQaGFzZS5zdHlsZS5ib3JkZXIgPSBcIjVweCBzb2xpZCBibGFja1wiXG4gICAgICAgIHVwcGVyUGhhc2Uuc3R5bGUuYm9yZGVyUmFkaXVzID0gXCIyMHB4XCJcbiAgICAgICAgdXBwZXJQaGFzZS5zdHlsZS5iYWNrZ3JvdW5kID0gXCJibGFja1wiXG4gICAgICAgIHVwcGVyUGhhc2Uuc3R5bGUuY29sb3IgPSBcIndoaXRlXCJcbiAgICAgICAgdXBwZXJQaGFzZS5zdHlsZS5ib3hTaGFkb3cgPSBcIjBweCAwcHggNjBweCAyMHB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KSBcIlxuICAgICAgICB1cHBlclBoYXNlLnN0eWxlLnRleHRTaGFkb3cgPSBcIjFweCAxcHggMTBweCB3aGl0ZSBcIlxuXG4gICAgICAgIGxvd2VyUGhhc2Uuc3R5bGUuZm9udFN0eWxlID0gXCJpdGFsaWNcIlxuICAgICAgICBsb3dlclBoYXNlLnN0eWxlLmJvcmRlciA9IFwiMTBweCBzb2xpZCB3aGl0ZVwiXG4gICAgICAgIGxvd2VyUGhhc2Uuc3R5bGUuYm9yZGVyUmFkaXVzID0gXCIyMHB4XCJcbiAgICAgICAgbG93ZXJQaGFzZS5zdHlsZS5iYWNrZ3JvdW5kID0gXCJ3aGl0ZVwiXG4gICAgICAgIGxvd2VyUGhhc2Uuc3R5bGUuY29sb3IgPSBcImJsYWNrXCJcbiAgICAgICAgbG93ZXJQaGFzZS5zdHlsZS5ib3hTaGFkb3cgPSBcIjBweCAwcHggNjBweCAyMHB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KSBcIlxuICAgICAgICBsb3dlclBoYXNlLnN0eWxlLnRleHRTaGFkb3cgPSBcIjFweCAxcHggNXB4IGJsYWNrIFwiXG4gICAgICAgIGxvd2VyUGhhc2Uuc3R5bGUud2lkdGggPSAnODAlJ1xuXG5cbiAgICAgICAgbW9vbkltZy5zdHlsZS53aWR0aCA9IFwiMzUwXCJcbiAgICAgICAgbW9vbkltZy5zdHlsZS5oZWlnaHQgPSBcIjM1MFwiXG4gICAgICAgIG1vb25JbWcuc3R5bGUuekluZGV4ID0gXCIxMFwiXG5cbiAgICAgICAgdXBwZXIuYXBwZW5kKHVwcGVySGVhZClcbiAgICAgICAgdXBwZXIuYXBwZW5kKHVwcGVyUGhhc2UpXG4gICAgICAgIGxvd2VyLmFwcGVuZChsb3dlckhlYWQpXG4gICAgICAgIGxvd2VyLmFwcGVuZChsb3dlclBoYXNlKVxuICAgICAgICBzdmcuYXBwZW5kKG1vb25JbWcpXG4gICAgICAgIFxuXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25PcGVuKCl7XG4gICAgICAgIGRyYXdNb29uKHF1ZXJ5RGF0YSw2MDAsXCIzMHB4XCIsXCJibGFja1wiLFwiI3N2Zy1jb250YWluZXJcIilcbiAgICAgICAgY3JlYXRlVGV4dChxdWVyeURhdGEpXG4gICAgfVxuICBcblxuICAgIG9wZW5Nb29uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLG9wZW5Nb2RhbClcbiAgICBvcGVuTW9vbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixvbk9wZW4pXG4gICAgY2xvc2VNb2RhbEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixjbG9zZU1vZGFsKVxuXG5cblxufVxuIl0sIm5hbWVzIjpbIm1vb25QaGFzZXMiLCJtb29uUGhhc2VOYW1lIiwiZHJhd01vb24iLCJxdWVyeURhdGEiLCJkaWFtZXRlciIsInN0cm9rZSIsInN0cm9rZUNvbG9yIiwiaWQiLCJ3aWR0aCIsImhlaWdodCIsIm1hcmdpbiIsInJhZGl1cyIsIk1hdGgiLCJtaW4iLCJzdmciLCJkMyIsInNlbGVjdCIsImFwcGVuZCIsImF0dHIiLCJkYXRhIiwiY29sb3IiLCJzY2FsZU9yZGluYWwiLCJyYW5nZSIsInBpZSIsInZhbHVlIiwiZCIsInNvcnQiLCJhcmMiLCJpbm5lclJhZGl1cyIsIm91dGVyUmFkaXVzIiwiZGF0YV9yZWFkeSIsIk9iamVjdCIsImVudHJpZXMiLCJzZWxlY3RBbGwiLCJqb2luIiwidHJhbnNpdGlvbiIsImRlbGF5IiwiaSIsImR1cmF0aW9uIiwic3R5bGUiLCJ0ZXh0IiwiY2VudHJvaWQiLCJvcGVuTW9vbk1vZGFsIiwibW9kYWwiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJvdmVybGF5Iiwib3Blbk1vb24iLCJjbG9zZU1vZGFsQnRuIiwidXBwZXIiLCJsb3dlciIsImJhY2tncm91bmQiLCJvcGVuTW9kYWwiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJjbG9zZU1vZGFsIiwiYWRkIiwiaW5uZXJIVE1MIiwiY3JlYXRlVGV4dCIsInVwcGVySGVhZCIsImNyZWF0ZUVsZW1lbnQiLCJ1cHBlclBoYXNlIiwibG93ZXJIZWFkIiwibG93ZXJQaGFzZSIsIm1vb25JbWciLCJwaGFzZXMiLCJjdXJyZW50UGhhc2UiLCJpbm5lclRleHQiLCJjdXJyZW50SW5kZXgiLCJpbmRleE9mIiwic3JjIiwiZm9udFNpemUiLCJmb250U3R5bGUiLCJib3JkZXIiLCJib3JkZXJSYWRpdXMiLCJib3hTaGFkb3ciLCJ0ZXh0U2hhZG93IiwiekluZGV4Iiwib25PcGVuIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/moonPhase.js\n");

/***/ }),

/***/ "./src/scripts/precipitation.js":
/*!**************************************!*\
  !*** ./src/scripts/precipitation.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makePrecipWidget\": function() { return /* binding */ makePrecipWidget; },\n/* harmony export */   \"openPrecipModal\": function() { return /* binding */ openPrecipModal; }\n/* harmony export */ });\nfunction drawPrecip(queryData, diameter, inner, stroke, strokeColor) {\n  let delay = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let id = arguments.length > 6 ? arguments[6] : undefined;\n  //set the dimensions and margins of the graph\n\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n\n  // The radius of the pieplot is half the width or half the height (smallest one). Margin slightly subtracted \n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'sun-path'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n  const currentPrecip = queryData.days[0].precipprob;\n  let left = currentPrecip;\n  let right = 100 - currentPrecip;\n  const data = {\n    \"🌧️\": left,\n    \"\": right\n  };\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#2900ff\", \"#3a3a3a\"]);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null).startAngle(-5 * Math.PI / 6).endAngle(5 * Math.PI / 6);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('slice').data(data_ready).join('path').transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).delay(delay).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //5px\n  .style(\"opacity\", 1);\n  svg.selectAll('slices').data(data_ready).join('text').text(function (d) {\n    return d.data[0];\n  }).transition().duration(2000).delay(delay).attr(\"transform\", function (d) {\n    return `translate(${arc.centroid(d)})`;\n  }).style(\"text-anchor\", \"middle\");\n}\nfunction makePrecipWidget(data) {\n  drawPrecip(data, 150, 30, \"5px\", \"black\", 1000, \"#precip-widget\");\n  const currentPrecip = data.days[0].precipprob;\n  const precipContainer = document.querySelector(\"#precip-widget\");\n  const precipDiv = document.createElement(\"div\");\n  precipDiv.innerText = `${Math.round(currentPrecip)}` + `%`;\n  precipContainer.append(precipDiv);\n}\nfunction openPrecipModal(data) {\n  const currentPrecip = data.days[0].precipprob;\n  const precipType = data.days[0].preciptype;\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openPrecip = document.querySelector(\"#precip-widget>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n    upper.innerHTML = \"\";\n    lower.innerHTML = \"\";\n  };\n  function createText(data) {\n    const upperHead = document.createElement(\"p\");\n    const upperPrecip = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerPrecip = document.createElement(\"h1\");\n    const PrecipImg = document.createElement(\"img\");\n    upperHead.innerText = \"Precipitation Chance\";\n    upperPrecip.innerText = `${Math.round(currentPrecip)}` + `%`;\n    upperPrecip.style.color = \"#000000\";\n    upperPrecip.style.border = \"5px solid #2900ff\";\n    upperPrecip.style.borderRadius = \"20px\";\n    upperPrecip.style.background = \"#2900ff\";\n    upperPrecip.style.boxShadow = \"0px 0px 20px 20px #2900ff\";\n    upperPrecip.style.textShadow = \"1px 1px 5px black\";\n    lowerHead.innerText = \"Precipitation Type\";\n    if (precipType) {\n      for (let i = 0; i < precipType.length; i++) {\n        precipType[i] = precipType[i][0].toUpperCase() + precipType[i].slice(1);\n      }\n      lowerPrecip.innerText = precipType.join(\",\");\n    } else {\n      lowerPrecip.innerText = \"None\";\n    }\n    lowerPrecip.style.color = \"#2900ff\";\n    lowerPrecip.style.textShadow = \"1px 1px 10px #2900ff\";\n    lowerPrecip.style.fontSize = '35px';\n    lowerPrecip.style.border = \"5px solid #2900ff\";\n    lowerPrecip.style.borderRadius = \"20px\";\n    lowerPrecip.style.boxShadow = \"0px 0px 20px 20px #2900ff\";\n    lowerPrecip.style.padding = \"5px\";\n    PrecipImg.src = 'images/weather/precipitation.png';\n    svg.append(PrecipImg);\n    upper.append(upperHead);\n    upper.append(upperPrecip);\n    lower.append(lowerHead);\n    lower.append(lowerPrecip);\n  }\n  function onOpen() {\n    drawPrecip(data, 600, 60, \"5px\", \"white\", 0, \"#svg-container\");\n    createText(data);\n  }\n  openPrecip.addEventListener(\"click\", openModal);\n  openPrecip.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/precipitation.js\n");

/***/ }),

/***/ "./src/scripts/seasons.js":
/*!********************************!*\
  !*** ./src/scripts/seasons.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"drawSeasons\": function() { return /* binding */ drawSeasons; },\n/* harmony export */   \"openSeasonsModal\": function() { return /* binding */ openSeasonsModal; }\n/* harmony export */ });\n/* harmony import */ var _timeConvert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeConvert */ \"./src/scripts/timeConvert.js\");\n// code will be similar to sunmoves script \n\nfunction drawSeasons(queryData, diameter, inner, stroke, strokeColor, id) {\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'seasons'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n  //dynamic data \n  let currentDay = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.currentDays)(queryData.days[0].datetime);\n  // console.log(currentDay)\n  const year = parseInt(queryData.days[0].datetime.slice(0, 4));\n  function winterTime(currentDay) {\n    let winter = 0;\n    if (currentDay > 90) {\n      return 0;\n    } else {\n      return 90 - currentDay;\n    }\n  }\n  function springTime(currentDay) {\n    if (currentDay > 182) {\n      return 0;\n    } else if (currentDay > 90) {\n      return 182 - currentDay;\n    } else {\n      return 92;\n    }\n  }\n  function summerTime(currentDay) {\n    if (currentDay > 273) {\n      return 0;\n    } else if (currentDay > 182) {\n      return 273 - currentDay;\n    } else {\n      return 92;\n    }\n  }\n  function fallTime(currentDay) {\n    if (currentDay > 273) {\n      return 365 - currentDay;\n    } else {\n      return 91;\n    }\n  }\n  const data = {\n    \"current\": currentDay,\n    \"winter\": winterTime(currentDay),\n    \"spring\": springTime(currentDay),\n    \"summer\": summerTime(currentDay),\n    \"fall\": fallTime(currentDay)\n  };\n\n  // data object\n  // const data = {e:2000,a:2000,b:2000,c:2000,d:2000}\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#000000\", \"#99ffe6\", \"#065535\", \"#fff228\", '#f77c3f']);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('path').data(data_ready).join('path')\n  // .attr('d', d3.arc()\n  //     .innerRadius(60)         // KEEP THIS LOGIC FOR MOON DELAY TRANSITION\n  //     .outerRadius(radius))\n  .transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor).style(\"stroke-width\", stroke).style(\"opacity\", 1);\n}\nfunction openSeasonsModal(queryData) {\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openSeasons = document.querySelector(\"#seasons>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n  };\n  function createText(queryData) {\n    const upperHead = document.createElement(\"p\");\n    const upperSeason = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerSeason = document.createElement(\"h1\");\n    const seasonImg = document.createElement(\"img\");\n    let currentDay = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.currentDays)(queryData.days[0].datetime);\n    //90,92,92,91 ---- 90,181,273,364(365 === 1)\n    let currently;\n    let following;\n    let currentSeason;\n    let nextSeason;\n    if (currentDay <= 90) {\n      currently = currentDay;\n      following = 90 - currentDay;\n      currentSeason = \"Winter\";\n      nextSeason = \"Spring\";\n      seasonImg.src = 'images/seasons/winter.png';\n    } else if (currentDay > 90 && currentDay <= 181) {\n      currently = currentDay - 90;\n      following = 181 - currentDay;\n      currentSeason = \"Spring\";\n      nextSeason = \"Summer\";\n      seasonImg.src = 'images/seasons/spring.png';\n    } else if (currentDay > 182 && currentDay <= 273) {\n      currently = currentDay - 182;\n      following = 273 - currentDay;\n      currentSeason = \"Summer\";\n      nextSeason = \"Fall\";\n      seasonImg.src = 'images/seasons/summer.png';\n    } else {\n      currently = currentDay - 274;\n      following = 365 - currentDay;\n      console.log(currently);\n      console.log(currentDay);\n      currentSeason = \"Fall\";\n      nextSeason = \"Winter\";\n      seasonImg.src = 'images/seasons/autumn.png';\n    }\n    upperHead.innerText = `${currently} day(s) into `;\n    lowerHead.innerText = `${following} day(s) until`;\n    upperSeason.innerText = `${currentSeason}`;\n    lowerSeason.innerText = `${nextSeason}`;\n    //[\"#000000\",\"#99ffe6\",\"#065535\", \"#fff228\",'#f77c3f'])\n    let currentColor;\n    let nextColor;\n    if (currentSeason === \"Winter\") {\n      currentColor = \"#99ffe6\";\n      nextColor = \"#065535\";\n    } else if (currentSeason === \"Spring\") {\n      currentColor = \"#065535\";\n      nextColor = \"#fff228\";\n    } else if (currentSeason === \"Summer\") {\n      currentColor = \"#fff228\";\n      nextColor = \"#f77c3f\";\n    } else {\n      currentColor = \"#f77c3f\";\n      nextColor = \"#99ffe6\";\n    }\n    upperSeason.style.color = currentColor;\n    upperSeason.style.border = `5px solid ${currentColor}`;\n    upperSeason.style.borderRadius = \"20px\";\n    upperSeason.style.background = \"black\";\n    upperSeason.style.boxShadow = `0px 0px 30px 10px ${currentColor} `;\n    upperSeason.style.padding = \"10px\";\n    upperSeason.style.textShadow = `1px 1px 5px ${currentColor} `;\n    lowerSeason.style.border = `10px solid ${nextColor}`;\n    lowerSeason.style.borderRadius = \"20px\";\n    lowerSeason.style.background = nextColor;\n    lowerSeason.style.color = \"black\";\n    lowerSeason.style.boxShadow = `0px 0px 30px 10px ${nextColor} `;\n    lowerSeason.style.padding = '10px';\n    lowerSeason.style.textShadow = \"1px 1px 5px black \";\n    seasonImg.style.width = \"350px\";\n    seasonImg.style.height = \"350px\";\n    upper.append(upperHead);\n    upper.append(upperSeason);\n    lower.append(lowerHead);\n    lower.append(lowerSeason);\n    svg.append(seasonImg);\n  }\n  function onOpen() {\n    drawSeasons(queryData, 600, 40, \"5px\", \"white\", \"#svg-container\");\n    createText(queryData);\n  }\n  openSeasons.addEventListener(\"click\", openModal);\n  openSeasons.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/seasons.js\n");

/***/ }),

/***/ "./src/scripts/select_modal.js":
/*!*************************************!*\
  !*** ./src/scripts/select_modal.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"openSelectModal\": function() { return /* binding */ openSelectModal; }\n/* harmony export */ });\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ \"./src/scripts/data.js\");\n\nfunction clearContainer() {\n  let theSun = document.querySelector(\"#sun-path\");\n  let theMoon = document.querySelector(\"#moons\");\n  let theSeasons = document.querySelector(\"#seasons\");\n  let theTemp = document.querySelector(\"#temp-widget\");\n  let theHumid = document.querySelector(\"#humid-widget\");\n  let theUv = document.querySelector(\"#uv-widget\");\n  let thePrecip = document.querySelector(\"#precip-widget\");\n  let location = document.querySelector(\"#location\");\n  theSun.innerHTML = \"\";\n  theMoon.innerHTML = \"\";\n  theSeasons.innerHTML = \"\";\n  location.innerHTML = \"\";\n  theTemp.innerHTML = \"\";\n  theHumid.innerHTML = \"\";\n  theUv.innerHTML = \"\";\n  thePrecip.innerHTML = \"\";\n}\nfunction openSelectModal() {\n  const modal = document.querySelector('.intro-modal');\n  const overlay = document.querySelector(\".overlay\");\n  const selectButt = document.querySelector(\"#date-button\");\n  const selectContainer = document.createElement(\"div\");\n  selectContainer.setAttribute(\"id\", \"selectContainer\");\n  const enterInputs = document.createElement(\"button\");\n  enterInputs.setAttribute(\"id\", \"enterInputs\");\n  enterInputs.innerText = \"→\";\n  const closeButt = document.createElement(\"button\");\n  closeButt.setAttribute(\"id\", \"closeSelect\");\n  closeButt.innerText = \"←\";\n  closeButt.style.width = \"100px\";\n  function createElements() {\n    const selectDate = document.createElement(\"input\");\n    selectDate.setAttribute(\"type\", \"date\");\n    selectDate.setAttribute(\"id\", \"input-date\");\n    let currentDate = new Date();\n    currentDate = currentDate.toISOString().slice(0, 10);\n    selectDate.max = currentDate;\n    selectDate.min = \"1970-01-01\";\n    const dayNight = document.createElement(\"div\");\n    dayNight.setAttribute(\"id\", \"dayNight\");\n    const day = document.createElement(\"input\");\n    day.setAttribute(\"type\", \"radio\");\n    day.setAttribute(\"id\", \"dayRadio\");\n    day.value = \"Day\";\n    day.name = \"timeofDay\";\n    const dayLabel = document.createElement(\"label\");\n    dayLabel.setAttribute(\"for\", \"dayRadio\");\n    dayLabel.innerText = \"Day\";\n    const night = document.createElement(\"input\");\n    night.setAttribute(\"type\", \"radio\");\n    night.setAttribute(\"id\", \"nightRadio\");\n    night.name = \"timeofDay\";\n    night.value = \"Night\";\n    const nightLabel = document.createElement(\"label\");\n    nightLabel.setAttribute(\"for\", \"nightRadio\");\n    nightLabel.innerText = \"Night\";\n    dayNight.append(dayLabel, day, nightLabel, night);\n    const enterZip = document.createElement(\"input\");\n    enterZip.setAttribute(\"type\", \"number\");\n    enterZip.setAttribute(\"id\", \"selectZip\");\n    enterZip.placeholder = \"ZIP code\";\n    selectContainer.append(enterZip, selectDate, dayNight, enterInputs, closeButt);\n  }\n  function openSelect() {\n    modal.innerHTML = \"\";\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n    createElements();\n    modal.append(selectContainer);\n  }\n  function closeSelect() {\n    selectContainer.innerHTML = \"\";\n    modal.innerHTML = \"\";\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n  }\n  function getSelectData() {\n    let myNewZip = document.querySelector(\"#selectZip\").value;\n    let myNewDate = document.querySelector(\"#input-date\").value;\n    let dayRadio = document.querySelector(\"#dayRadio\").checked;\n    let nightRadio = document.querySelector(\"#nightRadio\").checked;\n    let theSun = document.querySelector(\"#sun-path\");\n    let theMoon = document.querySelector(\"#moons\");\n    let theSeasons = document.querySelector(\"#seasons\");\n    let currentDate = new Date();\n    currentDate = currentDate.toISOString().slice(0, 10);\n    if (currentDate === myNewDate) {\n      clearContainer();\n      (0,_data__WEBPACK_IMPORTED_MODULE_0__.getCurrentData)(myNewZip);\n    } else {\n      if (nightRadio) {\n        //HAVE TO CLEAR CONTAINERS FOR ID seasons, moons, sun-path\n        clearContainer();\n        (0,_data__WEBPACK_IMPORTED_MODULE_0__.getPastData)(myNewZip, myNewDate, \"21:00:00\");\n      } else {\n        clearContainer();\n        (0,_data__WEBPACK_IMPORTED_MODULE_0__.getPastData)(myNewZip, myNewDate, \"09:00:00\");\n      }\n    }\n\n    // console.log(myNewZip)\n    // console.log(myNewDate)\n    // console.log(dayRadio)\n    // console.log(nightRadio)\n  }\n\n  selectButt.addEventListener(\"click\", openSelect);\n  closeButt.addEventListener(\"click\", closeSelect);\n  enterInputs.addEventListener(\"click\", getSelectData);\n  enterInputs.addEventListener(\"click\", closeSelect);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/select_modal.js\n");

/***/ }),

/***/ "./src/scripts/sunmoves.js":
/*!*********************************!*\
  !*** ./src/scripts/sunmoves.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"drawSun\": function() { return /* binding */ drawSun; },\n/* harmony export */   \"openSunModal\": function() { return /* binding */ openSunModal; }\n/* harmony export */ });\n/* harmony import */ var _timeConvert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeConvert */ \"./src/scripts/timeConvert.js\");\n\nfunction drawSun(queryData, diameter, inner, stroke, strokeColor, id) {\n  //set the dimensions and margins of the graph\n\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n\n  // The radius of the pieplot is half the width or half the height (smallest one). Margin slightly subtracted \n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'sun-path'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n  // dynamic querydata , javascript time is in UTC, need to convert to EST \n  let currentSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.datetime);\n  let sunriseSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.sunrise);\n  let sunsetSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.sunset);\n  const totalTime = 24 * 60 * 60;\n  function nightTime(currentSeconds, sunriseSeconds, sunsetSeconds) {\n    if (currentSeconds > sunsetSeconds) {\n      return totalTime - currentSeconds + sunriseSeconds;\n    } else if (currentSeconds < sunriseSeconds) {\n      return sunriseSeconds - currentSeconds;\n    } else {\n      return totalTime - sunsetSeconds + sunriseSeconds;\n    }\n  }\n  function dayTime(currentSeconds, sunriseSeconds, sunsetSeconds) {\n    if (currentSeconds > sunriseSeconds && currentSeconds < sunsetSeconds) {\n      return sunsetSeconds - currentSeconds;\n    } else {\n      return 0;\n    }\n  }\n  function timeElapse(currentSeconds, sunriseSeconds, sunsetSeconds) {\n    if (currentSeconds > sunriseSeconds) {\n      return currentSeconds - sunriseSeconds;\n    } else if (currentSeconds < sunsetSeconds) {\n      return totalTime + currentSeconds - sunriseSeconds;\n    }\n  }\n  let nightSeconds = nightTime(currentSeconds, sunriseSeconds, sunsetSeconds);\n  let daySeconds = dayTime(currentSeconds, sunriseSeconds, sunsetSeconds);\n  let nowSeconds = timeElapse(currentSeconds, sunriseSeconds, sunsetSeconds);\n\n  // //dynamic data \n  const data = {\n    elapse: nowSeconds,\n    day: daySeconds,\n    night: nightSeconds\n  };\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#000000\", \"#ff0660\", \"#416fec\"]);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('path').data(data_ready).join('path')\n  // .attr('d', d3.arc()\n  //     .innerRadius(60)         // KEEP THIS LOGIC FOR MOON DELAY TRANSITION\n  //     .outerRadius(radius))\n  .transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //5px\n  .style(\"opacity\", 1);\n}\n\n//-----------------------------------------------------------------\n\nfunction openSunModal(queryData) {\n  let currentSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.datetime);\n  let sunriseSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.sunrise);\n  let sunsetSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.sunset);\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openSun = document.querySelector(\"#sun-path>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n    upper.innerHTML = \"\";\n    lower.innerHTML = \"\";\n  };\n  function createText(queryData) {\n    const upperHead = document.createElement(\"p\");\n    const upperTime = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerTime = document.createElement(\"h1\");\n    const dayImg = document.createElement(\"img\");\n    upperHead.innerText = \"Sunrise was at\";\n    upperTime.innerText = `${queryData.currentConditions.sunrise}`;\n    upperTime.style.color = \"black\";\n    upperTime.style.border = \"5px solid #ff0660\";\n    upperTime.style.borderRadius = \"20px\";\n    upperTime.style.background = \"#ff0660\";\n    upperTime.style.boxShadow = \"0px 0px 20px 20px #ff0660\";\n    upperTime.style.textShadow = \"1px 1px 5px black\";\n    upper.append(upperHead);\n    upper.append(upperTime);\n\n    // lowerHead.innerText = \"TESTING \"\n    // lowerTime.innerText = \"TEST\"\n\n    if (currentSeconds > sunsetSeconds) {\n      lowerHead.innerText = \"Sunset was at\";\n      dayImg.src = 'images/days/moon.png';\n    } else if (currentSeconds < sunriseSeconds) {\n      upperHead.innerText = \"Sunrise was last at\";\n      lowerHead.innerText = \"Sunset was at\";\n      dayImg.src = 'images/days/moon.png';\n    } else {\n      lowerHead.innerText = \"Sunset is at\";\n      dayImg.src = 'images/days/sun2.png';\n    }\n    lowerTime.innerText = `${queryData.currentConditions.sunset}`;\n    lowerTime.style.color = \"#416fec\";\n    lowerTime.style.border = \"5px solid #416fec\";\n    lowerTime.style.borderRadius = \"20px\";\n    lowerTime.style.background = \"black\";\n    lowerTime.style.boxShadow = \"0px 0px 20px 20px #416fec\";\n    lowerTime.style.textShadow = \"1px 1px 10px #416fec\";\n    lower.append(lowerHead);\n    lower.append(lowerTime);\n    svg.append(dayImg);\n  }\n  function onOpen() {\n    drawSun(queryData, 600, 30, \"5px\", \"white\", \"#svg-container\");\n    createText(queryData);\n  }\n  openSun.addEventListener(\"click\", openModal);\n  openSun.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/sunmoves.js\n");

/***/ }),

/***/ "./src/scripts/temperature.js":
/*!************************************!*\
  !*** ./src/scripts/temperature.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeTempWidget\": function() { return /* binding */ makeTempWidget; },\n/* harmony export */   \"openTempModal\": function() { return /* binding */ openTempModal; }\n/* harmony export */ });\nfunction drawTemp(queryData, diameter, inner, stroke, strokeColor, delay, id) {\n  //set the dimensions and margins of the graph\n\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n\n  // The radius of the pieplot is half the width or half the height (smallest one). Margin slightly subtracted \n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'sun-path'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n  //dynamic data\n  const currentTemp = queryData.days[0].temp;\n  const tempMin = queryData.days[0].tempmin;\n  const tempMax = queryData.days[0].tempmax;\n  const tempFeels = queryData.days[0].feelslike;\n  let leftSide = currentTemp - tempMin;\n  let rightSide = tempMax - currentTemp;\n  const data = [leftSide, rightSide];\n\n  // const data = [1,1]\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#ff0c00\", \"#29cdff\"]);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null).startAngle(-5 * Math.PI / 6).endAngle(5 * Math.PI / 6);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('path').data(data_ready).join('path').transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //5px\n  .style(\"opacity\", 1);\n}\nfunction makeTempWidget(data) {\n  drawTemp(data, 150, 30, \"5px\", \"black\", 0, \"#temp-widget\");\n  const currentTemp = data.days[0].temp;\n  const tempMin = data.days[0].tempmin;\n  const tempMax = data.days[0].tempmax;\n  const tempFeels = data.days[0].feelslike;\n  const tempContainer = document.querySelector(\"#temp-widget\");\n  const tempDiv = document.createElement(\"div\");\n  tempDiv.innerText = `${Math.floor(currentTemp)}` + '°F';\n  tempContainer.append(tempDiv);\n}\nfunction openTempModal(data) {\n  const currentTemp = data.days[0].temp;\n  const tempMin = data.days[0].tempmin;\n  const tempMax = data.days[0].tempmax;\n  const tempFeels = data.days[0].feelslike;\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openTemp = document.querySelector(\"#temp-widget>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n    upper.innerHTML = \"\";\n    lower.innerHTML = \"\";\n  };\n  function createText(data) {\n    const upperHead = document.createElement(\"p\");\n    const upperTemp = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerTemp = document.createElement(\"h1\");\n    const tempImg = document.createElement(\"div\");\n    upperHead.innerText = \"Day High is \";\n    upperTemp.innerText = `${Math.floor(tempMax)}` + '°F';\n    upperTemp.style.color = \"black\";\n    upperTemp.style.border = \"5px solid #ff0c00\";\n    upperTemp.style.borderRadius = \"20px\";\n    upperTemp.style.background = \"#ff0c00\";\n    upperTemp.style.boxShadow = \"0px 0px 20px 20px #ff0c00\";\n    upperTemp.style.textShadow = \"1px 1px 5px black\";\n    lowerHead.innerText = \"Day Low is\";\n    lowerTemp.innerText = `${Math.floor(tempMin)}` + '°F';\n    lowerTemp.style.color = \"black\";\n    lowerTemp.style.border = \"5px solid #29cdff\";\n    lowerTemp.style.borderRadius = \"20px\";\n    lowerTemp.style.background = \"#29cdff\";\n    lowerTemp.style.boxShadow = \"0px 0px 20px 20px #29cdff\";\n    lowerTemp.style.textShadow = \"1px 1px 5px black\";\n    upper.append(upperHead);\n    upper.append(upperTemp);\n    lower.append(lowerHead);\n    lower.append(lowerTemp);\n    let currentContainer = document.createElement(\"div\");\n    let currentTempContainer = document.createElement(\"div\");\n    let feelsContainer = document.createElement(\"div\");\n    let feelsTempContainer = document.createElement(\"div\");\n    currentContainer.innerText = \"Currently\";\n    currentTempContainer.innerText = `${Math.floor(currentTemp)}` + '°F';\n    feelsContainer.innerText = \"Feels like\";\n    feelsTempContainer.innerText = `${Math.floor(tempFeels)}` + '°F';\n    tempImg.append(currentContainer);\n    tempImg.append(currentTempContainer);\n    tempImg.append(document.createElement(\"br\"));\n    tempImg.append(feelsContainer);\n    tempImg.append(feelsTempContainer);\n    svg.append(tempImg);\n  }\n  function onOpen() {\n    drawTemp(data, 600, 80, \"5px\", \"white\", 0, \"#svg-container\");\n    createText(data);\n  }\n  openTemp.addEventListener(\"click\", openModal);\n  openTemp.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/temperature.js\n");

/***/ }),

/***/ "./src/scripts/timeConvert.js":
/*!************************************!*\
  !*** ./src/scripts/timeConvert.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"callclock\": function() { return /* binding */ callclock; },\n/* harmony export */   \"currentDays\": function() { return /* binding */ currentDays; },\n/* harmony export */   \"getDate\": function() { return /* binding */ getDate; },\n/* harmony export */   \"getTime\": function() { return /* binding */ getTime; },\n/* harmony export */   \"getlocation\": function() { return /* binding */ getlocation; },\n/* harmony export */   \"moonPhaseName\": function() { return /* binding */ moonPhaseName; },\n/* harmony export */   \"moonPhases\": function() { return /* binding */ moonPhases; },\n/* harmony export */   \"timeToSeconds\": function() { return /* binding */ timeToSeconds; }\n/* harmony export */ });\nfunction timeToSeconds(str) {\n  let currentHours = parseInt(str.slice(0, 2));\n  let currentMinutes = parseInt(str.slice(3, 5));\n  let currentSeconds = parseInt(str.slice(6));\n  return currentHours * 60 * 60 + currentMinutes * 60 + currentSeconds;\n}\nconst days = {\n  \"01\": 31,\n  \"02\": 28,\n  \"03\": 31,\n  \"04\": 30,\n  \"05\": 31,\n  \"06\": 30,\n  \"07\": 31,\n  \"08\": 31,\n  \"09\": 30,\n  \"10\": 31,\n  \"11\": 30,\n  \"12\": 31\n};\nconst months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst sumDays = [31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\nconst leapMonths = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst sumLeap = [31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 336, 366];\n//circle starts at first day of winter: 12/01!!!\n\nfunction currentDays(str) {\n  const sumDays = [31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n  const sumLeap = [31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 336, 366];\n  let parsedYear = parseInt(str.slice(0, 4));\n  let parsedMonth = parseInt(str.slice(5, 7));\n  let parsedDay = parseInt(str.slice(8));\n  if (parsedMonth === 12) {\n    return parsedDay;\n  } else if (parsedMonth === 1) {\n    return 31 + parsedDay;\n  }\n  if (parsedYear % 4 === 0) {\n    return sumLeap[parsedMonth - 2] + parsedDay + 31;\n  } else {\n    return sumDays[parsedMonth - 2] + parsedDay + 31;\n  }\n}\nfunction moonPhases(data) {\n  let colors = [\"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\"];\n  const moonIndex = data.currentConditions.moonphase;\n  // const moonIndex = data\n\n  if (moonIndex < 0.125 || moonIndex === 1) {\n    colors.splice(0, 0, \"#000000\");\n  } else if (moonIndex >= 0.125 && moonIndex < 0.25) {\n    colors.splice(1, 0, \"#000000\");\n  } else if (moonIndex >= 0.25 && moonIndex < 0.375) {\n    colors.splice(2, 0, \"#000000\");\n  } else if (moonIndex >= 0.375 && moonIndex < 0.5) {\n    colors.splice(3, 0, \"#000000\");\n  } else if (moonIndex >= 0.5 && moonIndex < 0.625) {\n    colors.splice(4, 0, \"#000000\");\n  } else if (moonIndex >= 0.625 && moonIndex < 0.75) {\n    colors.splice(5, 0, \"#000000\");\n  } else if (moonIndex >= 0.75 && moonIndex < 0.875) {\n    colors.splice(6, 0, \"#000000\");\n  } else if (moonIndex >= 0.875 && moonIndex < 1) {\n    colors.splice(7, 0, \"#000000\");\n  } else {\n    colors.splice(0, 0, \"#000000\");\n  }\n  return colors;\n}\nfunction moonPhaseName(data) {\n  const moonIndex = data.currentConditions.moonphase;\n  let phaseName;\n  if (moonIndex < 0.125 || moonIndex === 1) {\n    phaseName = \"New\";\n  } else if (moonIndex >= 0.125 && moonIndex < 0.25) {\n    phaseName = \"Waxing Crescent\";\n  } else if (moonIndex >= 0.25 && moonIndex < 0.375) {\n    phaseName = \"First Quarter\";\n  } else if (moonIndex >= 0.375 && moonIndex < 0.5) {\n    phaseName = \"Waxing Gibbous\";\n  } else if (moonIndex >= 0.5 && moonIndex < 0.625) {\n    phaseName = \"Full\";\n  } else if (moonIndex >= 0.625 && moonIndex < 0.75) {\n    phaseName = \"Waning Gibbous\";\n  } else if (moonIndex >= 0.75 && moonIndex < 0.875) {\n    phaseName = \"Last Quarter\";\n  } else if (moonIndex >= 0.875 && moonIndex < 1) {\n    phaseName = \"Waning Crescent\";\n  } else {\n    phaseName = \"New\";\n  }\n  return phaseName;\n}\nfunction getDate(data) {\n  let dataDate = data.days[0].datetime;\n  const currentDate = document.querySelector('#date');\n  currentDate.innerText = dataDate;\n}\nfunction getTime(data) {\n  let dataTime = data.currentConditions.datetime;\n  let showTime;\n  if (dataTime === \"09:00:00\") {\n    showTime = \"9:00 AM\";\n  } else {\n    showTime = \"9:00 PM\";\n  }\n  document.querySelector(\"#location\").appendChild(document.createElement(\"br\"));\n  document.querySelector(\"#location\").append(showTime);\n  // console.log(dataTime)\n}\n\nfunction callclock() {\n  function realClock() {\n    let date = new Date();\n    let hours = date.getHours();\n    let mins = date.getMinutes();\n    let secs = date.getSeconds();\n    hours = hours < 10 ? \"0\" + hours : hours;\n    mins = mins < 10 ? \"0\" + mins : mins;\n    secs = secs < 10 ? \"0\" + secs : secs;\n    let time = hours + \":\" + mins + \":\" + secs;\n    document.querySelector(\"#clock\").innerText = time;\n    let t = setTimeout(function () {\n      realClock();\n    }, 1000);\n  }\n  realClock();\n}\nfunction getlocation(data) {\n  let myLocation = data.timezone.split('/');\n  let zip = data.resolvedAddress.split(',')[0];\n  let state = myLocation[1].split(\"_\").join(\" \");\n  let address = data.resolvedAddress.split(',')[1] + \"\\n\" + state + \"\\n\" + zip;\n  // myLocation = myLocation.join(' ')\n  // document.querySelector(\"#location\").append(myLocation.join(' '))\n  // document.querySelector(\"#location\").append(zip)\n\n  document.querySelector(\"#location\").append(address);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/timeConvert.js\n");

/***/ }),

/***/ "./src/scripts/uv.js":
/*!***************************!*\
  !*** ./src/scripts/uv.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeUvWidget\": function() { return /* binding */ makeUvWidget; },\n/* harmony export */   \"openUvModal\": function() { return /* binding */ openUvModal; }\n/* harmony export */ });\nfunction drawUv(queryData, diameter, inner, stroke, strokeColor) {\n  let delay = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let id = arguments.length > 6 ? arguments[6] : undefined;\n  //set the dimensions and margins of the graph\n\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n\n  // The radius of the pieplot is half the width or half the height (smallest one). Margin slightly subtracted \n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'sun-path'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n  const data = [3, 3, 2, 4, 2]; //0,1,2,3,4,5,6,7,8,9,10,11+\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#3ded97\", \"#fff440\", \"#e69138\", \"#ff0800\", \"#d200ff\"]);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null).startAngle(-5 * Math.PI / 6).endAngle(5 * Math.PI / 6);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('path').data(data_ready).join('path').transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).delay(delay).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //5px\n  .style(\"opacity\", 1);\n}\nfunction makeUvWidget(data) {\n  drawUv(data, 150, 30, \"5px\", \"black\", 1500, \"#uv-widget\");\n  const currentUv = data.currentConditions.uvindex;\n  const uvContainer = document.querySelector(\"#uv-widget\");\n  const uvDiv = document.createElement(\"div\");\n  let uvText;\n  if (currentUv === null) {\n    uvText = 'N/A';\n  } else {\n    uvText = \"UV\" + \" \" + `${currentUv}`;\n  }\n  uvDiv.innerText = uvText;\n\n  //[\"#3ded97\", \"#fff440\",\"#e69138\",\"#ff0800\",\"#d200ff\"]\n\n  if (currentUv < 3) {\n    uvDiv.style.color = \"#3ded97\";\n    uvDiv.style.textShadow = \"1px 1px 20px #3ded97\";\n  } else if (currentUv > 2 && currentUv < 6) {\n    uvDiv.style.color = \"#fff440\";\n    uvDiv.style.textShadow = \"1px 1px 20px #fff440\";\n  } else if (currentUv > 5 && currentUv < 8) {\n    uvDiv.style.color = \"#e69138\";\n    uvDiv.style.textShadow = \"1px 1px 20px #e69138\";\n  } else if (currentUv > 7 && currentUv < 11) {\n    uvDiv.style.color = \"#ff0800\";\n    uvDiv.style.textShadow = \"1px 1px 20px #ff0800\";\n  } else {\n    uvDiv.style.color = \"#d200ff\";\n    uvDiv.style.textShadow = \"1px 1px 20px #d200ff\";\n  }\n  uvContainer.append(uvDiv);\n}\nfunction openUvModal(data) {\n  const currentUv = data.currentConditions.uvindex;\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openUv = document.querySelector(\"#uv-widget>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n    upper.innerHTML = \"\";\n    lower.innerHTML = \"\";\n  };\n  function createText(data) {\n    const upperHead = document.createElement(\"p\");\n    const upperUv = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerUv = document.createElement(\"h1\");\n    const uvImg = document.createElement(\"img\");\n    upperHead.innerText = \"Current UV index\";\n    upperUv.innerText = `${currentUv}`;\n    let uvColors = [\"#3ded97\", \"#fff440\", \"#e69138\", \"#ff0800\", \"#d200ff\"];\n    let currentUvColor;\n    if (currentUv < 3) {\n      currentUvColor = uvColors[0];\n      lowerUv.innerText = 'Low';\n    } else if (currentUv > 2 && currentUv < 6) {\n      currentUvColor = uvColors[1];\n      lowerUv.innerText = 'Moderate';\n    } else if (currentUv > 5 && currentUv < 8) {\n      currentUvColor = uvColors[2];\n      lowerUv.innerText = 'High';\n    } else if (currentUv > 7 && currentUv < 11) {\n      currentUvColor = uvColors[3];\n      lowerUv.innerText = 'Very High';\n    } else {\n      currentUvColor = uvColors[4];\n      lowerUv.innerText = 'Extreme';\n    }\n    upperUv.style.color = \"#000000\";\n    upperUv.style.border = `5px solid ${currentUvColor}`;\n    upperUv.style.borderRadius = \"20px\";\n    upperUv.style.background = `${currentUvColor}`;\n    upperUv.style.boxShadow = `0px 0px 20px 20px ${currentUvColor}`;\n    upperUv.style.textShadow = \"1px 1px 10px black\";\n    lowerHead.innerText = \"Current Condition\";\n    lowerUv.style.color = `${currentUvColor}`;\n    lowerUv.style.textShadow = `1px 1px 10px ${currentUvColor}`;\n    lowerUv.style.borderRadius = \"20px\";\n    lowerUv.style.border = `5px solid ${currentUvColor}`;\n    lowerUv.style.boxShadow = `1px 1px 20px 20px ${currentUvColor}`;\n    lowerUv.style.padding = \"10px\";\n    uvImg.src = 'images/weather/uv.png';\n    svg.append(uvImg);\n    upper.append(upperHead);\n    upper.append(upperUv);\n    lower.append(lowerHead);\n    lower.append(lowerUv);\n  }\n  function onOpen() {\n    drawUv(data, 600, 30, \"20px\", \"black\", 0, \"#svg-container\");\n    createText(data);\n  }\n  openUv.addEventListener(\"click\", openModal);\n  openUv.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/uv.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc19wcm9qX2N5Y2xlLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;