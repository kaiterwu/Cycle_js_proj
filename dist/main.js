/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_sunmoves__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/sunmoves */ \"./src/scripts/sunmoves.js\");\n/* harmony import */ var _scripts_seasons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/seasons */ \"./src/scripts/seasons.js\");\n/* harmony import */ var _scripts_moonPhase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/moonPhase */ \"./src/scripts/moonPhase.js\");\n/* harmony import */ var _scripts_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/data */ \"./src/scripts/data.js\");\n/* harmony import */ var _scripts_timeConvert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/timeConvert */ \"./src/scripts/timeConvert.js\");\n/* harmony import */ var _scripts_intro_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scripts/intro_modal */ \"./src/scripts/intro_modal.js\");\n/* harmony import */ var _scripts_select_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scripts/select_modal */ \"./src/scripts/select_modal.js\");\n\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  (0,_scripts_intro_modal__WEBPACK_IMPORTED_MODULE_5__.openIntroModal)();\n  (0,_scripts_select_modal__WEBPACK_IMPORTED_MODULE_6__.openSelectModal)();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDeUQ7QUFDUTtBQUNKO0FBQ2U7QUFDbEI7QUFDSDtBQUNFO0FBR3pEYyxRQUFRLENBQUNDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLE1BQU07RUFFaERILG9FQUFjLEVBQUU7RUFDaEJDLHNFQUFlLEVBQUU7QUFJckIsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNfcHJval9jeWNsZS8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHtkcmF3U3VuLG9wZW5TdW5Nb2RhbH0gIGZyb20gXCIuL3NjcmlwdHMvc3VubW92ZXNcIjtcbmltcG9ydCB7IGRyYXdTZWFzb25zLG9wZW5TZWFzb25zTW9kYWwgfSBmcm9tIFwiLi9zY3JpcHRzL3NlYXNvbnNcIjtcbmltcG9ydCB7IGRyYXdNb29uLG9wZW5Nb29uTW9kYWwgfSBmcm9tIFwiLi9zY3JpcHRzL21vb25QaGFzZVwiO1xuaW1wb3J0IHsgZmV0Y2hEYXRhLGdldERhdGEsZ2V0Q2xvY2ssIGdldEN1cnJlbnREYXRhIH0gZnJvbSBcIi4vc2NyaXB0cy9kYXRhXCI7XG5pbXBvcnQgeyBnZXREYXRlLGNhbGxjbG9jayB9IGZyb20gXCIuL3NjcmlwdHMvdGltZUNvbnZlcnRcIjtcbmltcG9ydCB7IG9wZW5JbnRyb01vZGFsIH0gZnJvbSBcIi4vc2NyaXB0cy9pbnRyb19tb2RhbFwiO1xuaW1wb3J0IHsgb3BlblNlbGVjdE1vZGFsIH0gZnJvbSBcIi4vc2NyaXB0cy9zZWxlY3RfbW9kYWxcIjtcblxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gICAgXG4gICAgb3BlbkludHJvTW9kYWwoKVxuICAgIG9wZW5TZWxlY3RNb2RhbCgpXG4gICBcbiAgICAgICAgXG4gICAgXG59KTtcblxuIl0sIm5hbWVzIjpbImRyYXdTdW4iLCJvcGVuU3VuTW9kYWwiLCJkcmF3U2Vhc29ucyIsIm9wZW5TZWFzb25zTW9kYWwiLCJkcmF3TW9vbiIsIm9wZW5Nb29uTW9kYWwiLCJmZXRjaERhdGEiLCJnZXREYXRhIiwiZ2V0Q2xvY2siLCJnZXRDdXJyZW50RGF0YSIsImdldERhdGUiLCJjYWxsY2xvY2siLCJvcGVuSW50cm9Nb2RhbCIsIm9wZW5TZWxlY3RNb2RhbCIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/data.js":
/*!*****************************!*\
  !*** ./src/scripts/data.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCurrentData\": function() { return /* binding */ getCurrentData; },\n/* harmony export */   \"getPastData\": function() { return /* binding */ getPastData; }\n/* harmony export */ });\n/* harmony import */ var _timeConvert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeConvert */ \"./src/scripts/timeConvert.js\");\n/* harmony import */ var _sunmoves__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sunmoves */ \"./src/scripts/sunmoves.js\");\n/* harmony import */ var _moonPhase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./moonPhase */ \"./src/scripts/moonPhase.js\");\n/* harmony import */ var _seasons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./seasons */ \"./src/scripts/seasons.js\");\n/* harmony import */ var _temperature__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./temperature */ \"./src/scripts/temperature.js\");\n/* harmony import */ var _humidity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./humidity */ \"./src/scripts/humidity.js\");\n/* harmony import */ var _uv__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./uv */ \"./src/scripts/uv.js\");\n/* harmony import */ var _precipitation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./precipitation */ \"./src/scripts/precipitation.js\");\n// import {drawSun,openSunModal}  from \"./scripts/sunmoves\";\n\n\n\n\n\n\n\n\nconst apiKey = \"4P48W2KCWFQAQ6SJ99K5H2VBM\";\n// const zip = \"11040\"\nconst now = Math.floor(Date.now() / 1000);\n\n// export let fetchData;\n\nasync function getCurrentData(zipcode) {\n  try {\n    const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${zipcode}/${now}?key=${apiKey}`);\n    //day/spring\n    //  const response = await fetch(`../project_docs/2023-03-12.json`);\n    //  night/winter\n    //  const response = await fetch(`../project_docs/night_data.json`)\n    // const response = await fetch(`../project_docs/summer.json`)\n    // const response = await fetch(`../project_docs/fall.json`)\n    if (response.ok) {\n      const data = await response.json();\n      (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.getDate)(data);\n      (0,_sunmoves__WEBPACK_IMPORTED_MODULE_1__.drawSun)(data, 200, 10, \"5px\", \"black\", \"#sun-path\");\n      (0,_moonPhase__WEBPACK_IMPORTED_MODULE_2__.drawMoon)(data, 450, \"30px\", \"black\", \"#moons\");\n      (0,_seasons__WEBPACK_IMPORTED_MODULE_3__.drawSeasons)(data, 600, 40, \"20px\", \"black\", \"#seasons\");\n      (0,_sunmoves__WEBPACK_IMPORTED_MODULE_1__.openSunModal)(data);\n      (0,_moonPhase__WEBPACK_IMPORTED_MODULE_2__.openMoonModal)(data);\n      (0,_seasons__WEBPACK_IMPORTED_MODULE_3__.openSeasonsModal)(data);\n      (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.getlocation)(data);\n      (0,_temperature__WEBPACK_IMPORTED_MODULE_4__.makeTempWidget)(data);\n      (0,_humidity__WEBPACK_IMPORTED_MODULE_5__.makeHumidWidget)(data);\n      (0,_uv__WEBPACK_IMPORTED_MODULE_6__.makeUvWidget)(data);\n      (0,_precipitation__WEBPACK_IMPORTED_MODULE_7__.makePrecipWidget)(data);\n      (0,_temperature__WEBPACK_IMPORTED_MODULE_4__.openTempModal)(data);\n      (0,_humidity__WEBPACK_IMPORTED_MODULE_5__.openHumidModal)(data);\n      (0,_precipitation__WEBPACK_IMPORTED_MODULE_7__.openPrecipModal)(data);\n      (0,_uv__WEBPACK_IMPORTED_MODULE_6__.openUvModal)(data);\n      (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.callclock)();\n      console.log(data);\n    } else {\n      throw response;\n    }\n  } catch (errorResponse) {\n    console.error(errorResponse);\n  }\n}\nasync function getPastData(zipcode, date, dayTime) {\n  try {\n    const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${zipcode}/${date}T${dayTime}?key=${apiKey}&include=current`);\n    //day/spring\n    //  const response = await fetch(`../project_docs/2023-03-12.json`);\n    //  night/winter\n    //  const response = await fetch(`../project_docs/night_data.json`)\n    // const response = await fetch(`../project_docs/summer.json`)\n    // const response = await fetch(`../project_docs/fall.json`)\n    if (response.ok) {\n      const data = await response.json();\n      // callclock();\n      (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.getDate)(data);\n      (0,_sunmoves__WEBPACK_IMPORTED_MODULE_1__.drawSun)(data, 200, 10, \"5px\", \"black\", \"#sun-path\");\n      (0,_moonPhase__WEBPACK_IMPORTED_MODULE_2__.drawMoon)(data, 450, \"30px\", \"black\", \"#moons\");\n      (0,_seasons__WEBPACK_IMPORTED_MODULE_3__.drawSeasons)(data, 600, 40, \"20px\", \"black\", \"#seasons\");\n      (0,_sunmoves__WEBPACK_IMPORTED_MODULE_1__.openSunModal)(data);\n      (0,_moonPhase__WEBPACK_IMPORTED_MODULE_2__.openMoonModal)(data);\n      (0,_seasons__WEBPACK_IMPORTED_MODULE_3__.openSeasonsModal)(data);\n      (0,_temperature__WEBPACK_IMPORTED_MODULE_4__.makeTempWidget)(data);\n      (0,_humidity__WEBPACK_IMPORTED_MODULE_5__.makeHumidWidget)(data);\n      (0,_uv__WEBPACK_IMPORTED_MODULE_6__.makeUvWidget)(data);\n      (0,_precipitation__WEBPACK_IMPORTED_MODULE_7__.makePrecipWidget)(data);\n      (0,_temperature__WEBPACK_IMPORTED_MODULE_4__.openTempModal)(data);\n      (0,_humidity__WEBPACK_IMPORTED_MODULE_5__.openHumidModal)(data);\n      (0,_precipitation__WEBPACK_IMPORTED_MODULE_7__.openPrecipModal)(data);\n      (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.getlocation)(data);\n      (0,_uv__WEBPACK_IMPORTED_MODULE_6__.openUvModal)(data);\n      (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.getTime)(data);\n\n      // callclock()\n\n      console.log(data);\n      //  fetchData = data\n      //  return data\n    } else {\n      throw response;\n    }\n  } catch (errorResponse) {\n    console.error(errorResponse);\n  }\n}\n\n//   export default getCurrentData//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/data.js\n");

/***/ }),

/***/ "./src/scripts/humidity.js":
/*!*********************************!*\
  !*** ./src/scripts/humidity.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeHumidWidget\": function() { return /* binding */ makeHumidWidget; },\n/* harmony export */   \"openHumidModal\": function() { return /* binding */ openHumidModal; }\n/* harmony export */ });\nfunction drawHumid(queryData, diameter, inner, stroke, strokeColor) {\n  let delay = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let id = arguments.length > 6 ? arguments[6] : undefined;\n  //set the dimensions and margins of the graph\n\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n\n  // The radius of the pieplot is half the width or half the height (smallest one). Margin slightly subtracted \n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'sun-path'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n  const currentHumid = queryData.currentConditions.humidity;\n  let left = currentHumid;\n  let right = 100 - currentHumid;\n  const data = {\n    \"💧\": left,\n    \"\": right\n  };\n  // const data = {\"💧\":1,\"\":2}\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#9fc5e8\", \"#3a3a3a\"]);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null).startAngle(-5 * Math.PI / 6).endAngle(5 * Math.PI / 6);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('slice').data(data_ready).join('path').transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).delay(delay).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //5px\n  .style(\"opacity\", 1);\n  svg.selectAll('slices').data(data_ready).join('text').text(function (d) {\n    return d.data[0];\n  }).transition().duration(2000).delay(delay).attr(\"transform\", function (d) {\n    return `translate(${arc.centroid(d)})`;\n  }).style(\"text-anchor\", \"middle\");\n}\nfunction makeHumidWidget(data) {\n  drawHumid(data, 150, 30, \"5px\", \"black\", 500, \"#humid-widget\");\n  const currentHumid = data.currentConditions.humidity;\n  const humidContainer = document.querySelector(\"#humid-widget\");\n  const humidDiv = document.createElement(\"div\");\n  humidDiv.innerText = `${Math.round(currentHumid)}` + '%';\n  humidContainer.append(humidDiv);\n}\nfunction openHumidModal(data) {\n  const currentHumid = data.currentConditions.humidity;\n  const currentDew = data.currentConditions.dew;\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openHumid = document.querySelector(\"#humid-widget>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n    upper.innerHTML = \"\";\n    lower.innerHTML = \"\";\n  };\n  function createText(data) {\n    const upperHead = document.createElement(\"p\");\n    const upperHumid = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerDew = document.createElement(\"h1\");\n    const humidImg = document.createElement(\"img\");\n    upperHead.innerText = \"Current Humidity\";\n    upperHumid.innerText = `${Math.round(currentHumid)}` + `%`;\n    upperHumid.style.color = \"#000000\";\n    upperHumid.style.border = \"5px solid #9fc5e8\";\n    upperHumid.style.borderRadius = \"20px\";\n    upperHumid.style.background = \"#9fc5e8\";\n    upperHumid.style.boxShadow = \"0px 0px 20px 20px #9fc5e8\";\n    upperHumid.style.textShadow = \"1px 1px 5px black\";\n    lowerHead.innerText = \"Current Dew Point\";\n    lowerDew.innerText = `${Math.round(currentDew)}` + '°F';\n    lowerDew.style.color = \"#9fc5e8\";\n    lowerDew.style.border = \"5px solid #9fc5e8\";\n    lowerDew.style.borderRadius = \"20px\";\n    lowerDew.style.background = \"#9fc5e8\";\n    lowerDew.style.boxShadow = \"0px 0px 20px 20px #9fc5e8\";\n    lowerDew.style.textShadow = \"1px 1px 5px black\";\n    humidImg.src = 'images/weather/humidity.png';\n    svg.append(humidImg);\n    upper.append(upperHead);\n    upper.append(upperHumid);\n    lower.append(lowerHead);\n    lower.append(lowerDew);\n  }\n  function onOpen() {\n    drawHumid(data, 600, 60, \"5px\", \"white\", 0, \"#svg-container\");\n    createText(data);\n  }\n  openHumid.addEventListener(\"click\", openModal);\n  openHumid.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/humidity.js\n");

/***/ }),

/***/ "./src/scripts/intro_modal.js":
/*!************************************!*\
  !*** ./src/scripts/intro_modal.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"openIntroModal\": function() { return /* binding */ openIntroModal; }\n/* harmony export */ });\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ \"./src/scripts/data.js\");\n\nfunction openIntroModal() {\n  const modal = document.querySelector('.intro-modal');\n  const submit = document.querySelector('#start');\n  const overlay = document.querySelector(\".overlay\");\n  function closeModal() {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n  }\n  function getZip() {\n    let myZipcode = document.querySelector('#zipcode').value;\n    (0,_data__WEBPACK_IMPORTED_MODULE_0__.getCurrentData)(myZipcode);\n  }\n  submit.addEventListener(\"click\", closeModal);\n  submit.addEventListener(\"click\", getZip);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9pbnRyb19tb2RhbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUVqQyxTQUFTQyxjQUFjQSxDQUFBLEVBQUU7RUFDNUIsTUFBTUMsS0FBSyxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxjQUFjLENBQUM7RUFDcEQsTUFBTUMsTUFBTSxHQUFHRixRQUFRLENBQUNDLGFBQWEsQ0FBQyxRQUFRLENBQUM7RUFDL0MsTUFBTUUsT0FBTyxHQUFHSCxRQUFRLENBQUNDLGFBQWEsQ0FBQyxVQUFVLENBQUM7RUFFbEQsU0FBU0csVUFBVUEsQ0FBQSxFQUFFO0lBQ2pCTCxLQUFLLENBQUNNLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLFFBQVEsQ0FBQztJQUM3QkgsT0FBTyxDQUFDRSxTQUFTLENBQUNDLEdBQUcsQ0FBQyxRQUFRLENBQUM7RUFDbkM7RUFFQSxTQUFTQyxNQUFNQSxDQUFBLEVBQUU7SUFDYixJQUFJQyxTQUFTLEdBQUdSLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDUSxLQUFLO0lBQ3hEWixxREFBYyxDQUFDVyxTQUFTLENBQUM7RUFDN0I7RUFFQU4sTUFBTSxDQUFDUSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUNOLFVBQVUsQ0FBQztFQUMzQ0YsTUFBTSxDQUFDUSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUNILE1BQU0sQ0FBQztBQUUzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzX3Byb2pfY3ljbGUvLi9zcmMvc2NyaXB0cy9pbnRyb19tb2RhbC5qcz80Y2MyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEN1cnJlbnREYXRhIH0gZnJvbSBcIi4vZGF0YVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gb3BlbkludHJvTW9kYWwoKXtcbiAgICBjb25zdCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnRyby1tb2RhbCcpO1xuICAgIGNvbnN0IHN1Ym1pdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdGFydCcpO1xuICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm92ZXJsYXlcIik7XG5cbiAgICBmdW5jdGlvbiBjbG9zZU1vZGFsKCl7XG4gICAgICAgIG1vZGFsLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIilcbiAgICAgICAgb3ZlcmxheS5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0WmlwKCl7XG4gICAgICAgIGxldCBteVppcGNvZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjemlwY29kZScpLnZhbHVlXG4gICAgICAgIGdldEN1cnJlbnREYXRhKG15WmlwY29kZSlcbiAgICB9XG5cbiAgICBzdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsY2xvc2VNb2RhbClcbiAgICBzdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZ2V0WmlwKVxuXG59XG5cbiJdLCJuYW1lcyI6WyJnZXRDdXJyZW50RGF0YSIsIm9wZW5JbnRyb01vZGFsIiwibW9kYWwiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzdWJtaXQiLCJvdmVybGF5IiwiY2xvc2VNb2RhbCIsImNsYXNzTGlzdCIsImFkZCIsImdldFppcCIsIm15WmlwY29kZSIsInZhbHVlIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/intro_modal.js\n");

/***/ }),

/***/ "./src/scripts/moonPhase.js":
/*!**********************************!*\
  !*** ./src/scripts/moonPhase.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"drawMoon\": function() { return /* binding */ drawMoon; },\n/* harmony export */   \"openMoonModal\": function() { return /* binding */ openMoonModal; }\n/* harmony export */ });\n/* harmony import */ var _timeConvert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeConvert */ \"./src/scripts/timeConvert.js\");\n\n\nfunction drawMoon(queryData, diameter, stroke, strokeColor, id) {\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n  const radius = Math.min(width, height) / 2 - margin;\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n  // data object\n  const data = {\n    \"🌑\": 8,\n    \"🌒\": 8,\n    \"🌓\": 8,\n    \"🌔\": 8,\n    \"🌕\": 8,\n    \"🌖\": 8,\n    \"🌗\": 8,\n    \"🌘\": 8\n  };\n\n  // set color\n  const color = d3.scaleOrdinal()\n  // .range([\"#ffffff\",\"#000000\",\"#ffffff\",\"#ffffff\",\"#ffffff\",\"#ffffff\",\"#ffffff\",\"#ffffff\"])\n  //dynamic color\n  .range((0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.moonPhases)(queryData));\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null);\n  const arc = d3.arc().innerRadius(radius - 80).outerRadius(radius);\n  // .startAngle([MATH.PI])\n  // .endAngle([0])\n\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('slice').data(data_ready).join('path').attr('d', arc).transition().delay(function (d, i) {\n    return i / 8 * 1000;\n  }).duration(1000).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //\"30px\"\n  .style(\"opacity\", 1);\n\n  //logic for annotating moons\n\n  svg.selectAll('slices').data(data_ready).join('text').text(function (d) {\n    return d.data[0];\n  }).transition().duration(2000).attr(\"transform\", function (d) {\n    return `translate(${arc.centroid(d)})`;\n  }).style(\"text-anchor\", \"middle\");\n  //   .style(\"font-size\", 20)\n}\n\nfunction openMoonModal(queryData) {\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openMoon = document.querySelector(\"#moons>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const background = document.querySelector(\".moon_background\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n    background.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    background.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n  };\n  function createText(queryData) {\n    const upperHead = document.createElement(\"p\");\n    const upperPhase = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerPhase = document.createElement(\"h1\");\n    const moonImg = document.createElement(\"img\");\n    const phases = [\"New\", \"Waxing Crescent\", \"First Quarter\", \"Waxing Gibbous\", \"Full\", \"Waning Gibbous\", \"Last Quarter\", \"Waning Crescent\"];\n    const currentPhase = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.moonPhaseName)(queryData);\n    upperHead.innerText = \"Current Phase\";\n    upperPhase.innerText = currentPhase;\n    lowerHead.innerText = \"Next Phase\";\n    const currentIndex = phases.indexOf(currentPhase);\n    if (currentIndex !== 7) {\n      lowerPhase.innerText = phases[currentIndex + 1];\n    } else {\n      lowerPhase.innerText = phases[0];\n    }\n    switch (currentPhase) {\n      case \"New\":\n        moonImg.src = 'images/moons/new_moon.png';\n        break;\n      case \"Waxing Crescent\":\n        moonImg.src = 'images/moons/waxing_crescent.png';\n        break;\n      case \"First Quarter\":\n        moonImg.src = 'images/moons/first_quarter.png';\n        break;\n      case \"Waxing Gibbous\":\n        moonImg.src = 'images/moons/waxing_gibbous.png';\n        break;\n      case \"Full\":\n        moonImg.src = 'images/moons/Full_moon.png';\n        break;\n      case \"Waning Gibbous\":\n        moonImg.src = 'images/moons/waning_gibbous.png';\n        break;\n      case \"Last Quarter\":\n        moonImg.src = 'images/moons/last_quarter.png';\n        break;\n      case \"Waning Crescent\":\n        moonImg.src = 'images/moons/waxing_crescent.png';\n        break;\n    }\n    upperPhase.style.fontSize = \"60px\";\n    lowerPhase.style.fontSize = \"60px\";\n    upperPhase.style.fontStyle = \"italic\";\n    upperPhase.style.border = \"5px solid black\";\n    upperPhase.style.borderRadius = \"20px\";\n    upperPhase.style.background = \"black\";\n    upperPhase.style.color = \"white\";\n    upperPhase.style.boxShadow = \"0px 0px 60px 20px rgba(255, 255, 255, 0.4) \";\n    upperPhase.style.textShadow = \"1px 1px 10px white \";\n    lowerPhase.style.fontStyle = \"italic\";\n    lowerPhase.style.border = \"10px solid white\";\n    lowerPhase.style.borderRadius = \"20px\";\n    lowerPhase.style.background = \"white\";\n    lowerPhase.style.color = \"black\";\n    lowerPhase.style.boxShadow = \"0px 0px 60px 20px rgba(255, 255, 255, 0.4) \";\n    lowerPhase.style.textShadow = \"1px 1px 5px black \";\n    lowerPhase.style.width = '80%';\n    moonImg.style.width = \"350\";\n    moonImg.style.height = \"350\";\n    moonImg.style.zIndex = \"10\";\n    upper.append(upperHead);\n    upper.append(upperPhase);\n    lower.append(lowerHead);\n    lower.append(lowerPhase);\n    svg.append(moonImg);\n  }\n  function onOpen() {\n    drawMoon(queryData, 600, \"30px\", \"black\", \"#svg-container\");\n    createText(queryData);\n  }\n  openMoon.addEventListener(\"click\", openModal);\n  openMoon.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/moonPhase.js\n");

/***/ }),

/***/ "./src/scripts/precipitation.js":
/*!**************************************!*\
  !*** ./src/scripts/precipitation.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makePrecipWidget\": function() { return /* binding */ makePrecipWidget; },\n/* harmony export */   \"openPrecipModal\": function() { return /* binding */ openPrecipModal; }\n/* harmony export */ });\nfunction drawPrecip(queryData, diameter, inner, stroke, strokeColor) {\n  let delay = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let id = arguments.length > 6 ? arguments[6] : undefined;\n  //set the dimensions and margins of the graph\n\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n\n  // The radius of the pieplot is half the width or half the height (smallest one). Margin slightly subtracted \n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'sun-path'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n  const currentPrecip = queryData.days[0].precipprob;\n  let left = currentPrecip;\n  let right = 100 - currentPrecip;\n  const data = {\n    \"🌧️\": left,\n    \"\": right\n  };\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#2900ff\", \"#3a3a3a\"]);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null).startAngle(-5 * Math.PI / 6).endAngle(5 * Math.PI / 6);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('slice').data(data_ready).join('path').transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).delay(delay).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //5px\n  .style(\"opacity\", 1);\n  svg.selectAll('slices').data(data_ready).join('text').text(function (d) {\n    return d.data[0];\n  }).transition().duration(2000).delay(delay).attr(\"transform\", function (d) {\n    return `translate(${arc.centroid(d)})`;\n  }).style(\"text-anchor\", \"middle\");\n}\nfunction makePrecipWidget(data) {\n  drawPrecip(data, 150, 30, \"5px\", \"black\", 1000, \"#precip-widget\");\n  const currentPrecip = data.days[0].precipprob;\n  const precipContainer = document.querySelector(\"#precip-widget\");\n  const precipDiv = document.createElement(\"div\");\n  precipDiv.innerText = `${Math.round(currentPrecip)}` + `%`;\n  precipContainer.append(precipDiv);\n}\nfunction openPrecipModal(data) {\n  const currentPrecip = data.days[0].precipprob;\n  const precipType = data.days[0].preciptype;\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openPrecip = document.querySelector(\"#precip-widget>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n    upper.innerHTML = \"\";\n    lower.innerHTML = \"\";\n  };\n  function createText(data) {\n    const upperHead = document.createElement(\"p\");\n    const upperPrecip = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerPrecip = document.createElement(\"h1\");\n    const PrecipImg = document.createElement(\"img\");\n    upperHead.innerText = \"Precipitation Chance\";\n    upperPrecip.innerText = `${Math.round(currentPrecip)}` + `%`;\n    upperPrecip.style.color = \"#000000\";\n    upperPrecip.style.border = \"5px solid #2900ff\";\n    upperPrecip.style.borderRadius = \"20px\";\n    upperPrecip.style.background = \"#2900ff\";\n    upperPrecip.style.boxShadow = \"0px 0px 20px 20px #2900ff\";\n    upperPrecip.style.textShadow = \"1px 1px 10px black\";\n    lowerHead.innerText = \"Precipitation Type\";\n    if (precipType) {\n      for (let i = 0; i < precipType.length; i++) {\n        precipType[i] = precipType[i][0].toUpperCase() + precipType[i].slice(1);\n      }\n      lowerPrecip.innerText = precipType.join(\" \");\n    } else {\n      lowerPrecip.innerText = \"None\";\n    }\n    lowerPrecip.style.color = \"#2900ff\";\n    lowerPrecip.style.textShadow = \"1px 1px 10px #2900ff\";\n    lowerPrecip.style.fontSize = '35px';\n    lowerPrecip.style.border = \"5px solid #2900ff\";\n    lowerPrecip.style.borderRadius = \"20px\";\n    lowerPrecip.style.boxShadow = \"0px 0px 20px 20px #2900ff\";\n    lowerPrecip.style.padding = \"5px\";\n    PrecipImg.src = 'images/weather/precipitation.png';\n    svg.append(PrecipImg);\n    upper.append(upperHead);\n    upper.append(upperPrecip);\n    lower.append(lowerHead);\n    lower.append(lowerPrecip);\n  }\n  function onOpen() {\n    drawPrecip(data, 600, 60, \"5px\", \"white\", 0, \"#svg-container\");\n    createText(data);\n  }\n  openPrecip.addEventListener(\"click\", openModal);\n  openPrecip.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/precipitation.js\n");

/***/ }),

/***/ "./src/scripts/seasons.js":
/*!********************************!*\
  !*** ./src/scripts/seasons.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"drawSeasons\": function() { return /* binding */ drawSeasons; },\n/* harmony export */   \"openSeasonsModal\": function() { return /* binding */ openSeasonsModal; }\n/* harmony export */ });\n/* harmony import */ var _timeConvert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeConvert */ \"./src/scripts/timeConvert.js\");\n// code will be similar to sunmoves script \n\n//(queryData,diameter,inner,stroke,strokeColor,id)\nfunction drawSeasons(queryData, diameter, inner, stroke, strokeColor, id) {\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'seasons'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n  //dynamic data \n  let currentDay = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.currentDays)(queryData.days[0].datetime);\n  // console.log(currentDay)\n  const year = parseInt(queryData.days[0].datetime.slice(0, 4));\n  function winterTime(currentDay) {\n    let winter = 0;\n    if (currentDay > 90) {\n      return 0;\n    } else {\n      return 90 - currentDay;\n    }\n  }\n  function springTime(currentDay) {\n    if (currentDay > 182) {\n      return 0;\n    } else if (currentDay > 90) {\n      return 182 - currentDay;\n    } else {\n      return 92;\n    }\n  }\n  function summerTime(currentDay) {\n    if (currentDay > 273) {\n      return 0;\n    } else if (currentDay > 182) {\n      return 273 - currentDay;\n    } else {\n      return 92;\n    }\n  }\n  function fallTime(currentDay) {\n    if (currentDay > 273) {\n      return 365 - currentDay;\n    } else {\n      return 91;\n    }\n  }\n\n  // console.log(winterTime(currentDay))\n  // console.log(springTime(currentDay))\n  // console.log(summerTime(currentDay))\n  // console.log(fallTime(currentDay))\n  // console.log(queryData.days[0].datetime)\n\n  const data = {\n    \"current\": currentDay,\n    \"winter\": winterTime(currentDay),\n    \"spring\": springTime(currentDay),\n    \"summer\": summerTime(currentDay),\n    \"fall\": fallTime(currentDay)\n  };\n\n  // data object\n  // const data = {e:2000,a:2000,b:2000,c:2000,d:2000}\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#000000\", \"#99ffe6\", \"#065535\", \"#fff228\", '#f77c3f']);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('path').data(data_ready).join('path')\n  // .attr('d', d3.arc()\n  //     .innerRadius(60)         // KEEP THIS LOGIC FOR MOON DELAY TRANSITION\n  //     .outerRadius(radius))\n  .transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor).style(\"stroke-width\", stroke).style(\"opacity\", 1);\n}\nfunction openSeasonsModal(queryData) {\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openSeasons = document.querySelector(\"#seasons>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n  };\n  function createText(queryData) {\n    const upperHead = document.createElement(\"p\");\n    const upperSeason = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerSeason = document.createElement(\"h1\");\n    const seasonImg = document.createElement(\"img\");\n    let currentDay = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.currentDays)(queryData.days[0].datetime);\n    //90,92,92,91 ---- 90,181,273,364(365 === 1)\n    let currently;\n    let following;\n    let currentSeason;\n    let nextSeason;\n    if (currentDay <= 90) {\n      currently = currentDay;\n      following = 90 - currentDay;\n      currentSeason = \"Winter\";\n      nextSeason = \"Spring\";\n      seasonImg.src = 'images/seasons/winter.png';\n    } else if (currentDay > 90 && currentDay <= 181) {\n      currently = currentDay - 90;\n      following = 181 - currentDay;\n      currentSeason = \"Spring\";\n      nextSeason = \"Summer\";\n      seasonImg.src = 'images/seasons/spring.png';\n    } else if (currentDay > 182 && currentDay <= 273) {\n      currently = currentDay - 182;\n      following = 273 - currentDay;\n      currentSeason = \"Summer\";\n      nextSeason = \"Fall\";\n      seasonImg.src = 'images/seasons/summer.png';\n    } else {\n      currently = currentDay - 274;\n      following = 365 - currentDay;\n      console.log(currently);\n      console.log(currentDay);\n      currentSeason = \"Fall\";\n      nextSeason = \"Winter\";\n      seasonImg.src = 'images/seasons/autumn.png';\n    }\n    upperHead.innerText = `${currently} day(s) into `;\n    lowerHead.innerText = `${following} day(s) until`;\n    upperSeason.innerText = `${currentSeason}`;\n    lowerSeason.innerText = `${nextSeason}`;\n    //[\"#000000\",\"#99ffe6\",\"#065535\", \"#fff228\",'#f77c3f'])\n    let currentColor;\n    let nextColor;\n    if (currentSeason === \"Winter\") {\n      currentColor = \"#99ffe6\";\n      nextColor = \"#065535\";\n    } else if (currentSeason === \"Spring\") {\n      currentColor = \"#065535\";\n      nextColor = \"#fff228\";\n    } else if (currentSeason === \"Summer\") {\n      currentColor = \"#fff228\";\n      nextColor = \"#f77c3f\";\n    } else {\n      currentColor = \"#f77c3f\";\n      nextColor = \"#99ffe6\";\n    }\n    upperSeason.style.color = currentColor;\n    upperSeason.style.border = `5px solid ${currentColor}`;\n    upperSeason.style.borderRadius = \"20px\";\n    upperSeason.style.background = \"black\";\n    upperSeason.style.boxShadow = `0px 0px 30px 10px ${currentColor} `;\n    upperSeason.style.padding = \"10px\";\n    upperSeason.style.textShadow = `1px 1px 5px ${currentColor} `;\n    lowerSeason.style.border = `10px solid ${nextColor}`;\n    lowerSeason.style.borderRadius = \"20px\";\n    lowerSeason.style.background = nextColor;\n    lowerSeason.style.color = \"black\";\n    lowerSeason.style.boxShadow = `0px 0px 30px 10px ${nextColor} `;\n    lowerSeason.style.padding = '10px';\n    lowerSeason.style.textShadow = \"1px 1px 5px black \";\n    seasonImg.style.width = \"350px\";\n    seasonImg.style.height = \"350px\";\n    upper.append(upperHead);\n    upper.append(upperSeason);\n    lower.append(lowerHead);\n    lower.append(lowerSeason);\n    svg.append(seasonImg);\n  }\n  function onOpen() {\n    drawSeasons(queryData, 600, 40, \"5px\", \"white\", \"#svg-container\");\n    createText(queryData);\n  }\n  openSeasons.addEventListener(\"click\", openModal);\n  openSeasons.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/seasons.js\n");

/***/ }),

/***/ "./src/scripts/select_modal.js":
/*!*************************************!*\
  !*** ./src/scripts/select_modal.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"openSelectModal\": function() { return /* binding */ openSelectModal; }\n/* harmony export */ });\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ \"./src/scripts/data.js\");\n\nfunction clearContainer() {\n  let theSun = document.querySelector(\"#sun-path\");\n  let theMoon = document.querySelector(\"#moons\");\n  let theSeasons = document.querySelector(\"#seasons\");\n  let theTemp = document.querySelector(\"#temp-widget\");\n  let theHumid = document.querySelector(\"#humid-widget\");\n  let theUv = document.querySelector(\"#uv-widget\");\n  let thePrecip = document.querySelector(\"#precip-widget\");\n  let location = document.querySelector(\"#location\");\n  theSun.innerHTML = \"\";\n  theMoon.innerHTML = \"\";\n  theSeasons.innerHTML = \"\";\n  location.innerHTML = \"\";\n  theTemp.innerHTML = \"\";\n  theHumid.innerHTML = \"\";\n  theUv.innerHTML = \"\";\n  thePrecip.innerHTML = \"\";\n}\nfunction openSelectModal() {\n  const modal = document.querySelector('.intro-modal');\n  const overlay = document.querySelector(\".overlay\");\n  const selectButt = document.querySelector(\"#date-button\");\n  const selectContainer = document.createElement(\"div\");\n  selectContainer.setAttribute(\"id\", \"selectContainer\");\n  const enterInputs = document.createElement(\"button\");\n  enterInputs.setAttribute(\"id\", \"enterInputs\");\n  enterInputs.innerText = \"→\";\n  const closeButt = document.createElement(\"button\");\n  closeButt.setAttribute(\"id\", \"closeSelect\");\n  closeButt.innerText = \"←\";\n  closeButt.style.width = \"100px\";\n  function createElements() {\n    const selectDate = document.createElement(\"input\");\n    selectDate.setAttribute(\"type\", \"date\");\n    selectDate.setAttribute(\"id\", \"input-date\");\n    let currentDate = new Date();\n    currentDate = currentDate.toISOString().slice(0, 10);\n    selectDate.max = currentDate;\n    const dayNight = document.createElement(\"div\");\n    dayNight.setAttribute(\"id\", \"dayNight\");\n    const day = document.createElement(\"input\");\n    day.setAttribute(\"type\", \"radio\");\n    day.setAttribute(\"id\", \"dayRadio\");\n    day.value = \"Day\";\n    day.name = \"timeofDay\";\n    const dayLabel = document.createElement(\"label\");\n    dayLabel.setAttribute(\"for\", \"dayRadio\");\n    dayLabel.innerText = \"Day\";\n    const night = document.createElement(\"input\");\n    night.setAttribute(\"type\", \"radio\");\n    night.setAttribute(\"id\", \"nightRadio\");\n    night.name = \"timeofDay\";\n    night.value = \"Night\";\n    const nightLabel = document.createElement(\"label\");\n    nightLabel.setAttribute(\"for\", \"nightRadio\");\n    nightLabel.innerText = \"Night\";\n    dayNight.append(dayLabel, day, nightLabel, night);\n    const enterZip = document.createElement(\"input\");\n    enterZip.setAttribute(\"type\", \"number\");\n    enterZip.setAttribute(\"id\", \"selectZip\");\n    enterZip.placeholder = \"ZIP code\";\n    selectContainer.append(enterZip, selectDate, dayNight, enterInputs, closeButt);\n  }\n  function openSelect() {\n    modal.innerHTML = \"\";\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n    createElements();\n    modal.append(selectContainer);\n  }\n  function closeSelect() {\n    selectContainer.innerHTML = \"\";\n    modal.innerHTML = \"\";\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n  }\n  function getSelectData() {\n    let myNewZip = document.querySelector(\"#selectZip\").value;\n    let myNewDate = document.querySelector(\"#input-date\").value;\n    let dayRadio = document.querySelector(\"#dayRadio\").checked;\n    let nightRadio = document.querySelector(\"#nightRadio\").checked;\n    let theSun = document.querySelector(\"#sun-path\");\n    let theMoon = document.querySelector(\"#moons\");\n    let theSeasons = document.querySelector(\"#seasons\");\n    let currentDate = new Date();\n    currentDate = currentDate.toISOString().slice(0, 10);\n    if (currentDate === myNewDate) {\n      clearContainer();\n      (0,_data__WEBPACK_IMPORTED_MODULE_0__.getCurrentData)(myNewZip);\n    } else {\n      if (nightRadio) {\n        //HAVE TO CLEAR CONTAINERS FOR ID seasons, moons, sun-path\n        clearContainer();\n        (0,_data__WEBPACK_IMPORTED_MODULE_0__.getPastData)(myNewZip, myNewDate, \"21:00:00\");\n      } else {\n        clearContainer();\n        (0,_data__WEBPACK_IMPORTED_MODULE_0__.getPastData)(myNewZip, myNewDate, \"09:00:00\");\n      }\n    }\n\n    // console.log(myNewZip)\n    // console.log(myNewDate)\n    // console.log(dayRadio)\n    // console.log(nightRadio)\n  }\n\n  selectButt.addEventListener(\"click\", openSelect);\n  closeButt.addEventListener(\"click\", closeSelect);\n  enterInputs.addEventListener(\"click\", getSelectData);\n  enterInputs.addEventListener(\"click\", closeSelect);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/select_modal.js\n");

/***/ }),

/***/ "./src/scripts/sunmoves.js":
/*!*********************************!*\
  !*** ./src/scripts/sunmoves.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"drawSun\": function() { return /* binding */ drawSun; },\n/* harmony export */   \"openSunModal\": function() { return /* binding */ openSunModal; }\n/* harmony export */ });\n/* harmony import */ var _timeConvert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeConvert */ \"./src/scripts/timeConvert.js\");\n\nfunction drawSun(queryData, diameter, inner, stroke, strokeColor, id) {\n  //set the dimensions and margins of the graph\n\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n\n  // The radius of the pieplot is half the width or half the height (smallest one). Margin slightly subtracted \n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'sun-path'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n  // dynamic querydata , javascript time is in UTC, need to convert to EST \n  let currentSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.datetime);\n  let sunriseSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.sunrise);\n  let sunsetSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.sunset);\n  const totalTime = 24 * 60 * 60;\n  function nightTime(currentSeconds, sunriseSeconds, sunsetSeconds) {\n    if (currentSeconds > sunsetSeconds) {\n      return totalTime - currentSeconds + sunriseSeconds;\n    } else if (currentSeconds < sunriseSeconds) {\n      return sunriseSeconds - currentSeconds;\n    } else {\n      return totalTime - sunsetSeconds + sunriseSeconds;\n    }\n  }\n  function dayTime(currentSeconds, sunriseSeconds, sunsetSeconds) {\n    if (currentSeconds > sunriseSeconds && currentSeconds < sunsetSeconds) {\n      return sunsetSeconds - currentSeconds;\n    } else {\n      return 0;\n    }\n  }\n  function timeElapse(currentSeconds, sunriseSeconds, sunsetSeconds) {\n    if (currentSeconds > sunriseSeconds) {\n      return currentSeconds - sunriseSeconds;\n    } else if (currentSeconds < sunsetSeconds) {\n      return totalTime + currentSeconds - sunriseSeconds;\n    }\n  }\n\n  // console.log(currentSeconds);\n  // console.log(sunriseSeconds);\n  // console.log(sunsetSeconds);\n  // console.log(nightTime(currentSeconds,sunriseSeconds,sunsetSeconds))\n  // console.log(dayTime(currentSeconds,sunriseSeconds,sunsetSeconds))\n  // console.log(timeElapse(currentSeconds,sunriseSeconds,sunsetSeconds))\n\n  let nightSeconds = nightTime(currentSeconds, sunriseSeconds, sunsetSeconds);\n  let daySeconds = dayTime(currentSeconds, sunriseSeconds, sunsetSeconds);\n  let nowSeconds = timeElapse(currentSeconds, sunriseSeconds, sunsetSeconds);\n\n  // //dynamic data \n  const data = {\n    elapse: nowSeconds,\n    day: daySeconds,\n    night: nightSeconds\n  };\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#000000\", \"#ff0660\", \"#416fec\"]);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  // .startAngle(Math.PI/2)\n  // .endAngle(Math.PI*3/2)\n\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('path').data(data_ready).join('path')\n  // .attr('d', d3.arc()\n  //     .innerRadius(60)         // KEEP THIS LOGIC FOR MOON DELAY TRANSITION\n  //     .outerRadius(radius))\n  .transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //5px\n  .style(\"opacity\", 1);\n}\n\n//-----------------------------------------------------------------\n\nfunction openSunModal(queryData) {\n  let currentSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.datetime);\n  let sunriseSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.sunrise);\n  let sunsetSeconds = (0,_timeConvert__WEBPACK_IMPORTED_MODULE_0__.timeToSeconds)(queryData.currentConditions.sunset);\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openSun = document.querySelector(\"#sun-path>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n    upper.innerHTML = \"\";\n    lower.innerHTML = \"\";\n  };\n  function createText(queryData) {\n    const upperHead = document.createElement(\"p\");\n    const upperTime = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerTime = document.createElement(\"h1\");\n    const dayImg = document.createElement(\"img\");\n    upperHead.innerText = \"Sunrise was at\";\n    upperTime.innerText = `${queryData.currentConditions.sunrise}`;\n    upperTime.style.color = \"black\";\n    upperTime.style.border = \"5px solid #ff0660\";\n    upperTime.style.borderRadius = \"20px\";\n    upperTime.style.background = \"#ff0660\";\n    upperTime.style.boxShadow = \"0px 0px 20px 20px #ff0660\";\n    upperTime.style.textShadow = \"1px 1px 5px black\";\n    upper.append(upperHead);\n    upper.append(upperTime);\n\n    // lowerHead.innerText = \"TESTING \"\n    // lowerTime.innerText = \"TEST\"\n\n    if (currentSeconds > sunsetSeconds) {\n      lowerHead.innerText = \"Sunset was at\";\n      dayImg.src = 'images/days/moon.png';\n    } else if (currentSeconds < sunriseSeconds) {\n      upperHead.innerText = \"Sunrise was last at\";\n      lowerHead.innerText = \"Sunset was at\";\n      dayImg.src = 'images/days/moon.png';\n    } else {\n      lowerHead.innerText = \"Sunset is at\";\n      dayImg.src = 'images/days/sun2.png';\n    }\n    lowerTime.innerText = `${queryData.currentConditions.sunset}`;\n    lowerTime.style.color = \"#416fec\";\n    lowerTime.style.border = \"5px solid #416fec\";\n    lowerTime.style.borderRadius = \"20px\";\n    lowerTime.style.background = \"black\";\n    lowerTime.style.boxShadow = \"0px 0px 20px 20px #416fec\";\n    lowerTime.style.textShadow = \"1px 1px 10px #416fec\";\n    lower.append(lowerHead);\n    lower.append(lowerTime);\n    svg.append(dayImg);\n  }\n  function onOpen() {\n    drawSun(queryData, 600, 30, \"5px\", \"white\", \"#svg-container\");\n    createText(queryData);\n  }\n  openSun.addEventListener(\"click\", openModal);\n  openSun.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/sunmoves.js\n");

/***/ }),

/***/ "./src/scripts/temperature.js":
/*!************************************!*\
  !*** ./src/scripts/temperature.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeTempWidget\": function() { return /* binding */ makeTempWidget; },\n/* harmony export */   \"openTempModal\": function() { return /* binding */ openTempModal; }\n/* harmony export */ });\nfunction drawTemp(queryData, diameter, inner, stroke, strokeColor, delay, id) {\n  //set the dimensions and margins of the graph\n\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n\n  // The radius of the pieplot is half the width or half the height (smallest one). Margin slightly subtracted \n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'sun-path'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n  //dynamic data\n  const currentTemp = queryData.days[0].temp;\n  const tempMin = queryData.days[0].tempmin;\n  const tempMax = queryData.days[0].tempmax;\n  const tempFeels = queryData.days[0].feelslike;\n\n  //    console.log(currentTemp)\n  //    console.log(tempMin)\n  //    console.log(tempMax)\n  //    console.log(tempFeels)\n\n  let leftSide = currentTemp - tempMin;\n  let rightSide = tempMax - currentTemp;\n  const data = [leftSide, rightSide];\n\n  // const data = [1,1]\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#ff0c00\", \"#29cdff\"]);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null).startAngle(-5 * Math.PI / 6).endAngle(5 * Math.PI / 6);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('path').data(data_ready).join('path').transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //5px\n  .style(\"opacity\", 1);\n}\nfunction makeTempWidget(data) {\n  drawTemp(data, 150, 30, \"5px\", \"black\", 0, \"#temp-widget\");\n  const currentTemp = data.days[0].temp;\n  const tempMin = data.days[0].tempmin;\n  const tempMax = data.days[0].tempmax;\n  const tempFeels = data.days[0].feelslike;\n  const tempContainer = document.querySelector(\"#temp-widget\");\n  const tempDiv = document.createElement(\"div\");\n  tempDiv.innerText = `${currentTemp}` + '°F';\n  tempContainer.append(tempDiv);\n}\nfunction openTempModal(data) {\n  const currentTemp = data.days[0].temp;\n  const tempMin = data.days[0].tempmin;\n  const tempMax = data.days[0].tempmax;\n  const tempFeels = data.days[0].feelslike;\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openTemp = document.querySelector(\"#temp-widget>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n    upper.innerHTML = \"\";\n    lower.innerHTML = \"\";\n  };\n  function createText(data) {\n    const upperHead = document.createElement(\"p\");\n    const upperTemp = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerTemp = document.createElement(\"h1\");\n    const tempImg = document.createElement(\"div\");\n    upperHead.innerText = \"Day High is \";\n    upperTemp.innerText = `${tempMax}`;\n    upperTemp.style.color = \"black\";\n    upperTemp.style.border = \"5px solid #ff0c00\";\n    upperTemp.style.borderRadius = \"20px\";\n    upperTemp.style.background = \"#ff0c00\";\n    upperTemp.style.boxShadow = \"0px 0px 20px 20px #ff0c00\";\n    upperTemp.style.textShadow = \"1px 1px 5px black\";\n    lowerHead.innerText = \"Day Low is\";\n    lowerTemp.innerText = `${tempMin}`;\n    lowerTemp.style.color = \"black\";\n    lowerTemp.style.border = \"5px solid #29cdff\";\n    lowerTemp.style.borderRadius = \"20px\";\n    lowerTemp.style.background = \"#29cdff\";\n    lowerTemp.style.boxShadow = \"0px 0px 20px 20px #29cdff\";\n    lowerTemp.style.textShadow = \"1px 1px 5px black\";\n    upper.append(upperHead);\n    upper.append(upperTemp);\n    lower.append(lowerHead);\n    lower.append(lowerTemp);\n    let currentContainer = document.createElement(\"div\");\n    let currentTempContainer = document.createElement(\"div\");\n    let feelsContainer = document.createElement(\"div\");\n    let feelsTempContainer = document.createElement(\"div\");\n    currentContainer.innerText = \"Currently:\";\n    currentTempContainer.innerText = `${currentTemp}` + '°F';\n    feelsContainer.innerText = \"Feels like:\";\n    feelsTempContainer.innerText = `${tempFeels}` + '°F';\n    tempImg.append(currentContainer);\n    tempImg.append(currentTempContainer);\n    tempImg.append(document.createElement(\"br\"));\n    tempImg.append(feelsContainer);\n    tempImg.append(feelsTempContainer);\n    svg.append(tempImg);\n  }\n  function onOpen() {\n    drawTemp(data, 600, 80, \"5px\", \"white\", 0, \"#svg-container\");\n    createText(data);\n  }\n  openTemp.addEventListener(\"click\", openModal);\n  openTemp.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/temperature.js\n");

/***/ }),

/***/ "./src/scripts/timeConvert.js":
/*!************************************!*\
  !*** ./src/scripts/timeConvert.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"callclock\": function() { return /* binding */ callclock; },\n/* harmony export */   \"currentDays\": function() { return /* binding */ currentDays; },\n/* harmony export */   \"getDate\": function() { return /* binding */ getDate; },\n/* harmony export */   \"getTime\": function() { return /* binding */ getTime; },\n/* harmony export */   \"getlocation\": function() { return /* binding */ getlocation; },\n/* harmony export */   \"moonPhaseName\": function() { return /* binding */ moonPhaseName; },\n/* harmony export */   \"moonPhases\": function() { return /* binding */ moonPhases; },\n/* harmony export */   \"timeToSeconds\": function() { return /* binding */ timeToSeconds; }\n/* harmony export */ });\nfunction timeToSeconds(str) {\n  let currentHours = parseInt(str.slice(0, 2));\n  let currentMinutes = parseInt(str.slice(3, 5));\n  let currentSeconds = parseInt(str.slice(6));\n  return currentHours * 60 * 60 + currentMinutes * 60 + currentSeconds;\n}\nconst days = {\n  \"01\": 31,\n  \"02\": 28,\n  \"03\": 31,\n  \"04\": 30,\n  \"05\": 31,\n  \"06\": 30,\n  \"07\": 31,\n  \"08\": 31,\n  \"09\": 30,\n  \"10\": 31,\n  \"11\": 30,\n  \"12\": 31\n};\nconst months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst sumDays = [31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\nconst leapMonths = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst sumLeap = [31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 336, 366];\n//circle starts at first day of winter: 12/01!!!\n\nfunction currentDays(str) {\n  const sumDays = [31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n  const sumLeap = [31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 336, 366];\n  let parsedYear = parseInt(str.slice(0, 4));\n  let parsedMonth = parseInt(str.slice(5, 7));\n  let parsedDay = parseInt(str.slice(8));\n  if (parsedMonth === 12) {\n    return parsedDay;\n  } else if (parsedMonth === 1) {\n    return 31 + parsedDay;\n  }\n  if (parsedYear % 4 === 0) {\n    return sumLeap[parsedMonth - 2] + parsedDay + 31;\n  } else {\n    return sumDays[parsedMonth - 2] + parsedDay + 31;\n  }\n}\nfunction moonPhases(data) {\n  let colors = [\"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\"];\n  const moonIndex = data.currentConditions.moonphase;\n  // const moonIndex = data\n\n  if (moonIndex < 0.125 || moonIndex === 1) {\n    colors.splice(0, 0, \"#000000\");\n  } else if (moonIndex >= 0.125 && moonIndex < 0.25) {\n    colors.splice(1, 0, \"#000000\");\n  } else if (moonIndex >= 0.25 && moonIndex < 0.375) {\n    colors.splice(2, 0, \"#000000\");\n  } else if (moonIndex >= 0.375 && moonIndex < 0.5) {\n    colors.splice(3, 0, \"#000000\");\n  } else if (moonIndex >= 0.5 && moonIndex < 0.625) {\n    colors.splice(4, 0, \"#000000\");\n  } else if (moonIndex >= 0.625 && moonIndex < 0.75) {\n    colors.splice(5, 0, \"#000000\");\n  } else if (moonIndex >= 0.75 && moonIndex < 0.875) {\n    colors.splice(6, 0, \"#000000\");\n  } else if (moonIndex >= 0.875 && moonIndex < 1) {\n    colors.splice(7, 0, \"#000000\");\n  } else {\n    colors.splice(0, 0, \"#000000\");\n  }\n  return colors;\n}\nfunction moonPhaseName(data) {\n  const moonIndex = data.currentConditions.moonphase;\n  let phaseName;\n  if (moonIndex < 0.125 || moonIndex === 1) {\n    phaseName = \"New\";\n  } else if (moonIndex >= 0.125 && moonIndex < 0.25) {\n    phaseName = \"Waxing Crescent\";\n  } else if (moonIndex >= 0.25 && moonIndex < 0.375) {\n    phaseName = \"First Quarter\";\n  } else if (moonIndex >= 0.375 && moonIndex < 0.5) {\n    phaseName = \"Waxing Gibbous\";\n  } else if (moonIndex >= 0.5 && moonIndex < 0.625) {\n    phaseName = \"Full\";\n  } else if (moonIndex >= 0.625 && moonIndex < 0.75) {\n    phaseName = \"Waning Gibbous\";\n  } else if (moonIndex >= 0.75 && moonIndex < 0.875) {\n    phaseName = \"Last Quarter\";\n  } else if (moonIndex >= 0.875 && moonIndex < 1) {\n    phaseName = \"Waning Crescent\";\n  } else {\n    phaseName = \"New\";\n  }\n  return phaseName;\n}\nfunction getDate(data) {\n  let dataDate = data.days[0].datetime;\n  const currentDate = document.querySelector('#date');\n  currentDate.innerText = dataDate;\n}\nfunction getTime(data) {\n  let dataTime = data.currentConditions.datetime;\n\n  // let timeNow = document.querySelector('#clock')\n  // timeNow.innerText = dataTime\n  let showTime;\n  if (dataTime === \"09:00:00\") {\n    showTime = \"9:00 AM\";\n  } else {\n    showTime = \"9:00 PM\";\n  }\n  document.querySelector(\"#location\").appendChild(document.createElement(\"br\"));\n  document.querySelector(\"#location\").append(showTime);\n  console.log(dataTime);\n}\nfunction callclock() {\n  function realClock() {\n    let date = new Date();\n    let hours = date.getHours();\n    let mins = date.getMinutes();\n    let secs = date.getSeconds();\n    hours = hours < 10 ? \"0\" + hours : hours;\n    mins = mins < 10 ? \"0\" + mins : mins;\n    secs = secs < 10 ? \"0\" + secs : secs;\n    let time = hours + \":\" + mins + \":\" + secs;\n    document.querySelector(\"#clock\").innerText = time;\n    let t = setTimeout(function () {\n      realClock();\n    }, 1000);\n  }\n  realClock();\n}\nfunction getlocation(data) {\n  let myLocation = data.timezone.split('/');\n  let zip = data.resolvedAddress.split(',')[0];\n  let state = myLocation[1].split(\"_\").join(\" \");\n  let address = data.resolvedAddress.split(',')[1] + \"\\n\" + state + \"\\n\" + zip;\n  // myLocation = myLocation.join(' ')\n  // document.querySelector(\"#location\").append(myLocation.join(' '))\n  // document.querySelector(\"#location\").append(zip)\n\n  document.querySelector(\"#location\").append(address);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/timeConvert.js\n");

/***/ }),

/***/ "./src/scripts/uv.js":
/*!***************************!*\
  !*** ./src/scripts/uv.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeUvWidget\": function() { return /* binding */ makeUvWidget; },\n/* harmony export */   \"openUvModal\": function() { return /* binding */ openUvModal; }\n/* harmony export */ });\nfunction drawUv(queryData, diameter, inner, stroke, strokeColor) {\n  let delay = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let id = arguments.length > 6 ? arguments[6] : undefined;\n  //set the dimensions and margins of the graph\n\n  const width = diameter,\n    height = diameter,\n    margin = 20;\n\n  // The radius of the pieplot is half the width or half the height (smallest one). Margin slightly subtracted \n  const radius = Math.min(width, height) / 2 - margin;\n\n  // append the svg object to the div called 'sun-path'\n  const svg = d3.select(id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n  const data = [3, 3, 2, 4, 2]; //0,1,2,3,4,5,6,7,8,9,10,11+\n\n  // set color\n  const color = d3.scaleOrdinal().range([\"#3ded97\", \"#fff440\", \"#e69138\", \"#ff0800\", \"#d200ff\"]);\n\n  // Compute the position of each group on the pie:\n  const pie = d3.pie().value(d => d[1]).sort(null).startAngle(-5 * Math.PI / 6).endAngle(5 * Math.PI / 6);\n  const arc = d3.arc().innerRadius(radius - inner).outerRadius(radius);\n  const data_ready = pie(Object.entries(data));\n\n  // compose chart, each part of the pie is a path that we build using arc function.\n  svg.selectAll('path').data(data_ready).join('path').transition().duration(2000).attrTween('d', function (d) {\n    // 'd' is current datum and function is \"tween\" function that interpolates through the circle path \n    let i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  }).delay(delay).style('fill', d => color(d.data[0])).attr(\"stroke\", strokeColor) //\"black\"\n  .style(\"stroke-width\", stroke) //5px\n  .style(\"opacity\", 1);\n}\nfunction makeUvWidget(data) {\n  drawUv(data, 150, 30, \"5px\", \"black\", 1500, \"#uv-widget\");\n  const currentUv = data.currentConditions.uvindex;\n  const uvContainer = document.querySelector(\"#uv-widget\");\n  const uvDiv = document.createElement(\"div\");\n  uvDiv.innerText = \"UV\" + \" \" + `${currentUv}`;\n\n  //[\"#3ded97\", \"#fff440\",\"#e69138\",\"#ff0800\",\"#d200ff\"]\n\n  if (currentUv < 3) {\n    uvDiv.style.color = \"#3ded97\";\n    uvDiv.style.textShadow = \"1px 1px 20px #3ded97\";\n  } else if (currentUv > 2 && currentUv < 6) {\n    uvDiv.style.color = \"#fff440\";\n    uvDiv.style.textShadow = \"1px 1px 20px #fff440\";\n  } else if (currentUv > 5 && currentUv < 8) {\n    uvDiv.style.color = \"#e69138\";\n    uvDiv.style.textShadow = \"1px 1px 20px #e69138\";\n  } else if (currentUv > 7 && currentUv < 11) {\n    uvDiv.style.color = \"#ff0800\";\n    uvDiv.style.textShadow = \"1px 1px 20px #ff0800\";\n  } else {\n    uvDiv.style.color = \"#d200ff\";\n    uvDiv.style.textShadow = \"1px 1px 20px #d200ff\";\n  }\n  uvContainer.append(uvDiv);\n}\nfunction openUvModal(data) {\n  const currentUv = data.currentConditions.uvindex;\n  const modal = document.querySelector(\".astro-modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openUv = document.querySelector(\"#uv-widget>svg\");\n  const closeModalBtn = document.querySelector(\".close-btn\");\n  const svg = document.querySelector(\"#svg-container\");\n  const upper = document.querySelector(\"#upper-text\");\n  const lower = document.querySelector(\"#lower-text\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    svg.innerHTML = \"\";\n    upper.innerHTML = \"\";\n    lower.innerHTML = \"\";\n  };\n  function createText(data) {\n    const upperHead = document.createElement(\"p\");\n    const upperUv = document.createElement(\"h1\");\n    const lowerHead = document.createElement(\"p\");\n    const lowerUv = document.createElement(\"h1\");\n    const uvImg = document.createElement(\"img\");\n    upperHead.innerText = \"Current UV index\";\n    upperUv.innerText = `${currentUv}`;\n    let uvColors = [\"#3ded97\", \"#fff440\", \"#e69138\", \"#ff0800\", \"#d200ff\"];\n    let currentUvColor;\n    if (currentUv < 3) {\n      currentUvColor = uvColors[0];\n      lowerUv.innerText = 'Low';\n    } else if (currentUv > 2 && currentUv < 6) {\n      currentUvColor = uvColors[1];\n      lowerUv.innerText = 'Moderate';\n    } else if (currentUv > 5 && currentUv < 8) {\n      currentUvColor = uvColors[2];\n      lowerUv.innerText = 'High';\n    } else if (currentUv > 7 && currentUv < 11) {\n      currentUvColor = uvColors[3];\n      lowerUv.innerText = 'Very High';\n    } else {\n      currentUvColor = uvColors[4];\n      lowerUv.innerText = 'Extreme';\n    }\n    upperUv.style.color = \"#000000\";\n    upperUv.style.border = `5px solid ${currentUvColor}`;\n    upperUv.style.borderRadius = \"20px\";\n    upperUv.style.background = `${currentUvColor}`;\n    upperUv.style.boxShadow = `0px 0px 20px 20px ${currentUvColor}`;\n    upperUv.style.textShadow = \"1px 1px 10px black\";\n    lowerHead.innerText = \"Current Condition\";\n    lowerUv.style.color = `${currentUvColor}`;\n    lowerUv.style.textShadow = `1px 1px 10px ${currentUvColor}`;\n    lowerUv.style.borderRadius = \"20px\";\n    lowerUv.style.border = `5px solid ${currentUvColor}`;\n    lowerUv.style.boxShadow = `1px 1px 20px 20px ${currentUvColor}`;\n    lowerUv.style.padding = \"10px\";\n    uvImg.src = 'images/weather/uv.png';\n    svg.append(uvImg);\n    upper.append(upperHead);\n    upper.append(upperUv);\n    lower.append(lowerHead);\n    lower.append(lowerUv);\n  }\n  function onOpen() {\n    drawUv(data, 600, 30, \"20px\", \"black\", 0, \"#svg-container\");\n    createText(data);\n  }\n  openUv.addEventListener(\"click\", openModal);\n  openUv.addEventListener(\"click\", onOpen);\n  closeModalBtn.addEventListener(\"click\", closeModal);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/uv.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc19wcm9qX2N5Y2xlLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;